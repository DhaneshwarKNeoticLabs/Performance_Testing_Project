<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="GIN INTERPLANT TRANSFER">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.${project.version}. Please contact support@blazemeter.com for further support.</stringProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">192.168.2.5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">play.google.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">waa-pa.clients6.google.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <collectionProp name="DNSCacheManager.hosts"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/ListGoodsInwardNotes" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/ListGoodsInwardNotes</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Home/GetPlant" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Home/GetPlant</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="UserName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">UserName</stringProp>
                  <stringProp name="Argument.value">sujit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Master/GetPageAccessDetails" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Master/GetPageAccessDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MenuId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">MenuId</stringProp>
                  <stringProp name="Argument.value">26</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetPlant" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetPlant</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GoodsInwardNotes" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GoodsInwardNotes</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">6135.0</stringProp>
              <stringProp name="ConstantTimer.delay">3067.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 6135 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Home/GetPlant" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Home/GetPlant</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="UserName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">UserName</stringProp>
                  <stringProp name="Argument.value">sujit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Master/GetPageAccessDetails" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Master/GetPageAccessDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MenuId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">MenuId</stringProp>
                  <stringProp name="Argument.value">26</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetApplicationPreferencesSetting" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetApplicationPreferencesSetting</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetGRNTypeList" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetGRNTypeList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ItemsTobeInwardTpe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemsTobeInwardTpe</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetRackForRMGIN" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetRackForRMGIN</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Notification/Getnotitfication" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Notification/Getnotitfication</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/FillCustomerNVendorDropdownListByGin" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/FillCustomerNVendorDropdownListByGin</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="subTransactionCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">subTransactionCode</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VendorsNCustomer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">VendorsNCustomer</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/FillCustomerNVendorPoNSoDropdownList" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/FillCustomerNVendorPoNSoDropdownList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="GinTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinTypeId</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">156</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PoSoType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PoSoType</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetPoSoDeatils" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetPoSoDeatils</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ItemsTobeInwardTpe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemsTobeInwardTpe</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PoId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PoId</stringProp>
                  <stringProp name="Argument.value">PO/IP/2526/200054</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetStorePlantGrnTypeWise" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetStorePlantGrnTypeWise</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Grntype" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Grntype</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://play.google.com/log?format=json&amp;hasfast=true&amp;authuser=0" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">log</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="hasfast" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasfast</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authuser" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">authuser</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="?&#x0;f?&#x9c;²&#x1f;~oÁuPìòä.íXçA&#x99;&#xe; å&#x97;RR&gt;&#x15;B¢IÑ*ÿÖ&#x8e;&#x19;&#x16;&#x94;µ¡&#x8b;2ê ÎR´j¼q&#x82;â&#x84;B¨&#x2;&#x95;&#x6;õ¶h\`t&#x8a;S&#x6;¡Z&#x19;qVbÞ&#x13;&#x15;&#x9f;&#x1c;&#x83;bß &#x82;&#x6;f&#x9d;0Þ&#x15;Dè&#x97;Ð&#x83;Òº&#x84;-¿&#x8a;&#x9c;òdDD&#x96;»²SëyÝw]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">?&#x0;f?&#x9c;²&#x1f;~oÁuPìòä.íXçA&#x99;&#xe; å&#x97;RR&gt;&#x15;B¢IÑ*ÿÖ&#x8e;&#x19;&#x16;&#x94;µ¡&#x8b;2ê ÎR´j¼q&#x82;â&#x84;B¨&#x2;&#x95;&#x6;õ¶h\`t&#x8a;S&#x6;¡Z&#x19;qVbÞ&#x13;&#x15;&#x9f;&#x1c;&#x83;bß &#x82;&#x6;f&#x9d;0Þ&#x15;Dè&#x97;Ð&#x83;Òº&#x84;-¿&#x8a;&#x9c;òdDD&#x96;»²SëyÝw]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Ô(YÕO¼&#x9;1&#x7f;Ô&#x84;2&#x8d;&#x9;Å&#x98;ªµ&#x9c;HVØ?&#x13;&#x13;bp&#xd;â&#x83;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Ô(YÕO¼	1&#x7f;Ô&#x84;2&#x8d;	Å&#x98;ªµ&#x9c;HVØ?&#x13;&#x13;bp&#xd;â&#x83;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name=".eR&#x96;¢ê&#x97;&#x13;&#x83;¢õd¦&#x2;&#x93;¢&#x14;vëâ &#x1c;&#x99;8&#xe;Ø &#x9c;&#x11;L¥ÅúHÊ§l-mê&#x14;ë&#x17;¹&#x16;Mk&#x4;Õ¤V­LÊ&#x1c;&#x2;}õ8a&#x96;,&#x96;«;)ÒU`Ë&#x15;à&#x94;-¨Ð°Ê ìQ%«9&#x96;N-Æ¨2û&#xd;T§Ø&#x8b;±ú&#x17;&#x1e;&#xe;ª%©&#x19;â \&#xb;&#x95;ãp&lt;(Kñk&#x94;I9F5oï;aÖ \&#xb;OÊ&#x1c;M8ç&#x81;&#x93;æSm&#x92; Å)mP­VÁAM;å~åÔrUT&#x13;ÌÙT­&#x1;MÊU!q &#x19;&#x14;û)J1&#x12;&#x9c;&#x94;O¡qÚÅ)g¶&#x7f;&#x8b;æ¨:å¨&#x8a;ïÀeRæ@-¹s9åÎ%Tr¿&#xf;ÊÑ&#x12;êïÕ¤LÇE&#xa;&#xc;Êµ%&#xc;&#x9c;£&#x1f;&#x94;¥äMè íd½ol¦Ù#÷&#x96;ÕA&#x9a;%Wk9ï&#x9d;z«&#x9a;¯àA&#x95;:&#x99;&#x8c;8k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">.eR&#x96;¢ê&#x97;&#x13;&#x83;¢õd¦&#x2;&#x93;¢&#x14;vëâ &#x1c;&#x99;8&#xe;Ø &#x9c;&#x11;L¥ÅúHÊ§l-mê&#x14;ë&#x17;¹&#x16;Mk&#x4;Õ¤V­LÊ&#x1c;&#x2;}õ8a&#x96;,&#x96;«;)ÒU`Ë&#x15;à&#x94;-¨Ð°Ê ìQ%«9&#x96;N-Æ¨2û&#xd;T§Ø&#x8b;±ú&#x17;&#x1e;&#xe;ª%©&#x19;â \&#xb;&#x95;ãp&lt;(Kñk&#x94;I9F5oï;aÖ \&#xb;OÊ&#x1c;M8ç&#x81;&#x93;æSm&#x92; Å)mP­VÁAM;å~åÔrUT&#x13;ÌÙT­&#x1;MÊU!q &#x19;&#x14;û)J1&#x12;&#x9c;&#x94;O¡qÚÅ)g¶&#x7f;&#x8b;æ¨:å¨&#x8a;ïÀeRæ@-¹s9åÎ%Tr¿&#xf;ÊÑ&#x12;êïÕ¤LÇE
&#xc;Êµ%&#xc;&#x9c;£&#x1f;&#x94;¥äMè íd½ol¦Ù#÷&#x96;ÕA&#x9a;%Wk9ï&#x9d;z«&#x9a;¯àA&#x95;:&#x99;&#x8c;8k</stringProp>
                  <stringProp name="Argument.value">&#x8e;F&#xb;&#x14;jÚY´R®Õ ÖI LÊtV$W@P&#x96;lÔ÷&#x1c;§Ü&#x81;Ý&#x7f;&#x99;«Â=&#x98;ñÞrO´û^&#x6;iRÕ´¤S¼&#x93;ÑÏ49Û&#x1b;j&#x7f;&#x93;8e&#x9b;&#x9b; Â¤&#x9c;&#x93;­q·&#x86;SZ£ùIÜ&#x6;õò´õÕÓlXM&#xb;aÎX-ñÁá&#x4;~Ð&#x18;&#x94;ã«þÙ&#x18;mV?¾Ð Üi´Z&#x9e;¸&#x83;(Ë&#x93;VxQ¤³R-íì&#x94;¶²bùÖ&#xd;Êµ`T!ÞÉN&#x98;{I&#x1c;TyPÎ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="q&#x95;6(GUKñ&#x8d; ÉJÔ¦H&#x98;3Â)í¬&#x4;%g§SZH û&#xa;ï$YJ­&#x98;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">q&#x95;6(GUKñ&#x8d; ÉJÔ¦H&#x98;3Â)í¬&#x4;%g§SZH û
ï$YJ­&#x98;</stringProp>
                  <stringProp name="Argument.value">rªQ&#x9b;J&#x11;&#x9d;dY¯4ÿÂì&#x4;YGcÔI&#x96;9L(mê&#x94;ý5&#x9f;
:(-iàW&#x91;&#x83;²}&#x86;Å¿û&#x83;°¯A§´&#x81;!úWÔ Ìë&#x9b;z&#x8f;£&#x96;Ö0&quot;ÿ&#x9c;L&#x92;liP&#x96;G,9×&#x8c;&#x1a;ôöQë¶7¿oÐA9&#x96;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name=" &#x8c;àë6[(&#x8d;£&#x19;µU¿ñIð&#xd;Ö¼&#x14;Ñ&#xd;J&#x11;¿¢«&#x93;ÚæÓÑâF¤&#x93;øS?¯&#x99;ê &#x93; ß¦#&#x1d;&#x93;&#x0;&#x94;A(&#x9d;j&#x81;AÐ&#x92;Ô÷½N-Kf&#x2;Å$Å&#x11;§¨Y^&#x8b;³d&#x90;&#x96;^oSÿ:rR¿ÜH²j0I:)Â¤&#x88;«¥ &#x96;I&#x9a;ä&#x1f;U&#x83;8jó&#x85;ÐÓ9e:dÊö9emU@&#x0;&#x7;õ&#x1c;&#x82;¤2È¢¥µÕJ6&#x88;3Î&#x17;&#x17;&#xe;Ê:&#x4;&#x1a;eë&#x5;&#x1a;g/ÅÏ¨8(GAb&#x19;&#x4;&#x11;P&#x85;I&#x96;&#x84;-ë&#x95;j8&#x89;J&#x96;âWRÑ&#xf;Ñæ{q&apos;&#x8d;¸Vªß&#x7;&#x5;&#x9;g[Z&#x91;&#x9a;-õC&#x10;·AB&#x9d;ê¢&#x96;yQ&#x19;ê Ê8BÊ&#x91;n&#x95;ý&#x83;9¨RZ#È:Õ&#x1c;ó è¯&#x7f;dä&#x8;6i&#x92;cîDañÖ*×:H2N&#x15;z«T¡·Ê|&#x2;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name"> &#x8c;àë6[(&#x8d;£&#x19;µU¿ñIð&#xd;Ö¼&#x14;Ñ&#xd;J&#x11;¿¢«&#x93;ÚæÓÑâF¤&#x93;øS?¯&#x99;ê &#x93; ß¦#&#x1d;&#x93;&#x0;&#x94;A(&#x9d;j&#x81;AÐ&#x92;Ô÷½N-Kf&#x2;Å$Å&#x11;§¨Y^&#x8b;³d&#x90;&#x96;^oSÿ:rR¿ÜH²j0I:)Â¤&#x88;«¥ &#x96;I&#x9a;ä&#x1f;U&#x83;8jó&#x85;ÐÓ9e:dÊö9emU@&#x0;&#x7;õ&#x1c;&#x82;¤2È¢¥µÕJ6&#x88;3Î&#x17;&#x17;&#xe;Ê:&#x4;&#x1a;eë&#x5;&#x1a;g/ÅÏ¨8(GAb&#x19;&#x4;&#x11;P&#x85;I&#x96;&#x84;-ë&#x95;j8&#x89;J&#x96;âWRÑ&#xf;Ñæ{q&apos;&#x8d;¸Vªß&#x7;&#x5;	g[Z&#x91;&#x9a;-õC&#x10;·AB&#x9d;ê¢&#x96;yQ&#x19;ê Ê8BÊ&#x91;n&#x95;ý&#x83;9¨RZ#È:Õ&#x1c;ó è¯&#x7f;dä&#x8;6i&#x92;cîDañÖ*×:H2N&#x15;z«T¡·Ê|&#x2;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="!Lg`@Ø&#x81;ã&#x11;&#x13;Ä&#x14;õu&#x0;¸Y-à&apos;§&#xe;&#x16;1&quot;þ:NÀ&#x0;&#x7f;SK&#x7;`&#x7;CPëàcQ&#x8b;&#x89;Ñ&#x0;ï{-fþ&#x1;&#x92;à&#x93;­B&#x9c;A:X&#x0;&#x80;qí&#x10;¹&#x0;°MpÓU&#x0;õóa&#x7;¯Ô_cu&#x80;$&#x98;&#x88;·&#x10;&#x8;üu&#x93;&#x80;&#x91;&#x8b;j/Ù&#x8f;&#x90;&#x11;ã&#x1f;&#x9e;&#x91;&#x98;ý&#x1b;´&#x3;E3&#x4;ý£3!Ó&#x88;Tá&#xe;ùH&#x91;²&#x1c;&#x87;è&#x97;&#x1;ú$&#x9;È~&#x19;)`&#x7;&#x9f;½Õ¿~£©ñ&#x19;ìu!±&#x86;}&#x2;â&#x11;&#x89;&#x86;1&#x91;Ä¢&#x17;HÍ°v&#x8;#`%cî Þ&#x1e;&#x2;Î*&#x1c;(câSÔÌÓø&#x8;&#x6;&#x90;&#x4;´Xø&#x86;Â&#xa;&#x3;&#x88;&#x2;¤°t¨ìÐØ?©:èfF¤µÖ&#xe;ÒÁ?&#x7f;;D&#x1a;F&#x7f;E:&#x10;&#xe; &#x9f;?F¢ÍÍ&#x12;&#x10;&#xd;ãRÀ&#x1b;&#x1f;@&#x19;&#x83;è«2Á&#x12;d&lt;ò#¨&#x19;C]&#x10;&#xd;c&#x7f;&#xb;K&#x7;·&#x8f;±&#x7f;gO&#x88;rj&#x8b;u&#x11;@&#x9c;àÇæ&#x4;ß7|&#x1b;&#x8d;M" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">!Lg`@Ø&#x81;ã&#x11;&#x13;Ä&#x14;õu&#x0;¸Y-à&apos;§&#xe;&#x16;1&quot;þ:NÀ&#x0;&#x7f;SK&#x7;`&#x7;CPëàcQ&#x8b;&#x89;Ñ&#x0;ï{-fþ&#x1;&#x92;à&#x93;­B&#x9c;A:X&#x0;&#x80;qí&#x10;¹&#x0;°MpÓU&#x0;õóa&#x7;¯Ô_cu&#x80;$&#x98;&#x88;·&#x10;&#x8;üu&#x93;&#x80;&#x91;&#x8b;j/Ù&#x8f;&#x90;&#x11;ã&#x1f;&#x9e;&#x91;&#x98;ý&#x1b;´&#x3;E3&#x4;ý£3!Ó&#x88;Tá&#xe;ùH&#x91;²&#x1c;&#x87;è&#x97;&#x1;ú$	È~&#x19;)`&#x7;&#x9f;½Õ¿~£©ñ&#x19;ìu!±&#x86;}&#x2;â&#x11;&#x89;&#x86;1&#x91;Ä¢&#x17;HÍ°v&#x8;#`%cî Þ&#x1e;&#x2;Î*&#x1c;(câSÔÌÓø&#x8;&#x6;&#x90;&#x4;´Xø&#x86;Â
&#x3;&#x88;&#x2;¤°t¨ìÐØ?©:èfF¤µÖ&#xe;ÒÁ?&#x7f;;D&#x1a;F&#x7f;E:&#x10;&#xe; &#x9f;?F¢ÍÍ&#x12;&#x10;&#xd;ãRÀ&#x1b;&#x1f;@&#x19;&#x83;è«2Á&#x12;d&lt;ò#¨&#x19;C]&#x10;&#xd;c&#x7f;&#xb;K&#x7;·&#x8f;±&#x7f;gO&#x88;rj&#x8b;u&#x11;@&#x9c;àÇæ&#x4;ß7|&#x1b;&#x8d;M</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xa;í&#x9c;[&#x93;\Å&#x91;Ç¿&#x8a;¢&#x9f;ì&#x88;£¡òRY&#x99;áØ&#x7;.&#x86;%°d°±¹ôt&#x10;&#x82;&#x19;l&#x81;ÐÈBØì~ú&#x8d;Ì¬KOwK6ûà}Ùp0õë:uÍº&#x9c;:&#x95;&#x7f;k¿&#x87;íùOÏ&#x9e;ýË&#x7f;ö&#x97;&quot;w·Ï&#x1f;~ðÎî,í~¿{|÷ê×oÿæ&#x9d;&#x97;O&#x9e;ßì¶&#x9d;î&#xe;Û~÷î__Þýðô§&#x1f;vÛ&#xe;(£&gt;¸»ûË³Û&#x7;ñävÄ&#x1f;¶²í&gt;{úüæî&#x1f;?z\¹*We·í~VÙm»LuU®&#x1a;&#x16;¾&#x82;&#x2;^&#x10;oåp8lµmûý&#xe;ZE&#x5;i&#x80;&#xd;ø¬u§}Øï&#x8f;ú¦&#x84;[Ï.M&#x0;­&#x94;&#x92;O&#x9a;ðèÝi&#x82;C&gt;&#x80;&#x11;&#x16;&#x9c;¹¼&lt;%&lt;l÷ê Y&#x87;ÿ&apos;oªc$¸T&#x7;¬ò&#x94;è¤&#xe;Þî&#x99;á&#xd;uÌ&#x4;oì&#x7;û&#x7f;&#x87;Ã¶¿Þ½ûûö¸}L&#x8f;&#x7f;þ&#x82;ß{ÿË?" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;
í&#x9c;[&#x93;\Å&#x91;Ç¿&#x8a;¢&#x9f;ì&#x88;£¡òRY&#x99;áØ&#x7;.&#x86;%°d°±¹ôt&#x10;&#x82;&#x19;l&#x81;ÐÈBØì~ú&#x8d;Ì¬KOwK6ûà}Ùp0õë:uÍº&#x9c;:&#x95;&#x7f;k¿&#x87;íùOÏ&#x9e;ýË&#x7f;ö&#x97;&quot;w·Ï&#x1f;~ðÎî,í~¿{|÷ê×oÿæ&#x9d;&#x97;O&#x9e;ßì¶&#x9d;î&#xe;Û~÷î__Þýðô§&#x1f;vÛ&#xe;(£&gt;¸»ûË³Û&#x7;ñävÄ&#x1f;¶²í&gt;{úüæî&#x1f;?z\¹*We·í~VÙm»LuU®&#x1a;&#x16;¾&#x82;&#x2;^&#x10;oåp8lµmûý&#xe;ZE&#x5;i&#x80;&#xd;ø¬u§}Øï&#x8f;ú¦&#x84;[Ï.M&#x0;­&#x94;&#x92;O&#x9a;ðèÝi&#x82;C&gt;&#x80;&#x11;&#x16;&#x9c;¹¼&lt;%&lt;l÷ê Y&#x87;ÿ&apos;oªc$¸T&#x7;¬ò&#x94;è¤&#xe;Þî&#x99;á&#xd;uÌ&#x4;oì&#x7;û&#x7f;&#x87;Ã¶¿Þ½ûûö¸}L&#x8f;&#x7f;þ&#x82;ß{ÿË?</stringProp>
                  <stringProp name="Argument.value">ÿó?~{óñ&#x9f;þÔÚ&apos;×»^ 6k-{&#x96;&#x11;&#x8c;&quot;&#x8a;&#x85;&#x88;¶ëÝÛï½ÿøá7?Ý=Â&#xf;&#x7f;¾£ï_üí&#x9d;/^ÈW·ïë&#x97;ï}ôðÝÏ^~þá&#x97;ï|®&#x9f;~×Þ~&#x8c;O_}ó&#x87;òý&#xf;&#x9f;|õÞ_~~ôüî®|÷¹~¡ß~ôä£Wß=¦&#xf;þpÝ&#x7;&#x18; Ú&#x16;3òz·]ï&#x1e;Ýý÷ÓgÏ&#x9e;¼U¯Ê&#x83;_õÙôàñ§&#xf;|:ýæÁgO&#x9f;&#xb;ÿæÁÏÂ¿~ðö&#x8b;&#x17;Ïn?»ýú£§¯ÞªÔ®H&#x1e;üê£ÿüôÑï¶&#x7;Ï&#x9e;~&#x7f;ûà&#x83;Ûo¾¿ûu&#x9f;¤oåä WåÁ&#x1f;&#x9f;|ûäåÓ&#x9e;%ê&#x4;û´¾úê&#x8b;ÿúüå&#x8b;&#x87;?}ô¤ýùÃ&#x9f;?|üåÇ¿{üÞËïÞæ&#x9f;þø¤&gt;úÛÝßá&#x87;ß&gt;Ñß&#x8e;&#x86;ïË´øú&#x3;Û~_[)¥¶ÍC(&#x14;¡ÛÏÃZÍCRÊÐH=dA&#x88;P5ÒÕÖ&quot;&#x7f;U&#x8b;x)&#x12;é&#x5;[&#x89;°©xØ
G:_R&#x11;&#x1a;G~å&#x16;éµJ¤WÍôFÙ.ãæ¿¡&#x88;¡&#x87;P«§&#x3;&#x14;ª&#x11;Z±&#xc;ÁË&#x3;&#x2;&#x8b;xªÕë&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ÑL¢Y&#x9f;õöeÃ¡Ï&#x88;x&#x19;FØãK¦&#x8e;Ãµ&#x87;&#x0;½C½ñØÓSé!ö.ò6_&#x1;&apos;&#x7f;ö&#x17;wóõ§rßÅC»w8lg[·Ü&#x1b;ÊûÃÂG&#x83;3Ú&#x1e;M©&#x1b;n×»w~ÿ(6&#x80;wßyÿz·áf±&#x7;]ÞiÏ6\ß&#xa;&#x11;¶ë&#x9d;oa2&#x97;6l4^a½ÇõÂ&#x1b;b&#xf;Û&#x9e;&#xe;÷Jö«±³Mó&#x7f;#tý·ý&#x81;V&#x8b;ÅWµÚå7ê&#x1e;]Ï¡$Ü\&#x8e;üö&apos;ÿáÆº8äåM¯´ËCò&#xb;SNÝõë&#x93;ÿ&#x9f;µì&#xd;g&#x86;ýÿ &#x94;ï)&#x94;_£L&#x1e;&#x8a;ä©D&#x1e;&#xa;ä¡&lt;&gt;U&#x1c;&#xf;¥ñP&#x18;÷p*&#x8a;SI¼&#x94;Ã]1&lt;&#x95;Â]!&lt;&#x95;ÁC&#x11;&lt;&#x94;À]&#x1;|¦ü&#x1d;&#x8a;ß¡ô&#x1d;&#xa;ß®ì&#x9d;&#x8a;^:Qð&#xe;åîPì&#xe;¥îPè&#xe;eîPäv%îTà&#xe;åíPÜ&#xe;¥­&#x9d;(kñDI&#x9b;&#xa;Ú¥&#x9c;&#x1d;&#x8a;Ù¡&#x94;&#x1d;&#xa;Ù¡&#x8c;m&apos;JØ¡&#x80;m&apos;&#x8a;×¡t&#x1d;&#xa;×3eë&#x91; ÕîÉW&#x8f;ÅªC£º¤©]&#x91;z¤?&#x9d;²Ó©6]&quot;S;&#x95;&#x94;N%é&#x14;&#x90;NÝè&#x90;&#x8b;.&#x95;è&#x14;&#x87;&#x9e;iB&#x97;&#x14;t*@Ïõ&#x9e;Kæ©§ZÎ&#x94;p&#x1e;&#xb;6&#x97;NÓNT&#x99;K&#x8c;&#x19;&#x1a;Ì{&#x8a;Ë)´&#x9c;úÊsYåRS&#x9e;i&apos;íL)9&#x5;&#x92;S&#x17;9å&#x90;S&#x5;9Å&#x8f;SóØÎ&#x14;&#x8e;SØ8ô&#x8c;GêE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ÑL¢Y&#x9f;õöeÃ¡Ï&#x88;x&#x19;FØãK¦&#x8e;Ãµ&#x87;&#x0;½C½ñØÓSé!ö.ò6_&#x1;&apos;&#x7f;ö&#x17;wóõ§rßÅC»w8lg[·Ü&#x1b;ÊûÃÂG&#x83;3Ú&#x1e;M©&#x1b;n×»w~ÿ(6&#x80;wßyÿz·áf±&#x7;]ÞiÏ6\ß
&#x11;¶ë&#x9d;oa2&#x97;6l4^a½ÇõÂ&#x1b;b&#xf;Û&#x9e;&#xe;÷Jö«±³Mó&#x7f;#tý·ý&#x81;V&#x8b;ÅWµÚå7ê&#x1e;]Ï¡$Ü\&#x8e;üö&apos;ÿáÆº8äåM¯´ËCò&#xb;SNÝõë&#x93;ÿ&#x9f;µì&#xd;g&#x86;ýÿ &#x94;ï)&#x94;_£L&#x1e;&#x8a;ä©D&#x1e;
ä¡&lt;&gt;U&#x1c;&#xf;¥ñP&#x18;÷p*&#x8a;SI¼&#x94;Ã]1&lt;&#x95;Â]!&lt;&#x95;ÁC&#x11;&lt;&#x94;À]&#x1;|¦ü&#x1d;&#x8a;ß¡ô&#x1d;
ß®ì&#x9d;&#x8a;^:Qð&#xe;åîPì&#xe;¥îPè&#xe;eîPäv%îTà&#xe;åíPÜ&#xe;¥­&#x9d;(kñDI&#x9b;
Ú¥&#x9c;&#x1d;&#x8a;Ù¡&#x94;&#x1d;
Ù¡&#x8c;m&apos;JØ¡&#x80;m&apos;&#x8a;×¡t&#x1d;
×3eë&#x91; ÕîÉW&#x8f;ÅªC£º¤©]&#x91;z¤?&#x9d;²Ó©6]&quot;S;&#x95;&#x94;N%é&#x14;&#x90;NÝè&#x90;&#x8b;.&#x95;è&#x14;&#x87;&#x9e;iB&#x97;&#x14;t*@Ïõ&#x9e;Kæ©§ZÎ&#x94;p&#x1e;&#xb;6&#x97;NÓNT&#x99;K&#x8c;&#x19;&#x1a;Ì{&#x8a;Ë)´&#x9c;úÊsYåRS&#x9e;i&apos;íL)9&#x5;&#x92;S&#x17;9å&#x90;S&#x5;9Å&#x8f;SóØÎ&#x14;&#x8e;SØ8ô&#x8c;GêE</stringProp>
                  <stringProp name="Argument.value">Õ*N&#x89;b=&#x13;$N&#x1d;bÊ&#xf;&#x8f;Å&#x86;Kc8¤&#x85;SQ8&#x85;&#x84;C?¸d&#x83;K-¨gÚ@;S&#x2;Úëu&#x7f;zªò&#x9b;â&gt;;&#x91;ò&#x1d;&#xb;÷ôL¦§&apos;¢¼¥Å;&#x97;àMåÝ&#x14;Ü-&#x9d;&#x9d;ÞWÕ&#x1d;iè¦tNÎ&#x84;rS&#x1f;7eqgj¸)&#x82;» }&#x9b;&#x92;·©t&#x9b;&#x2;·©k&#x9b;r6~&#x8d;xíXª¦§Â´¥G«g¢³¡5[&#x12;³v.(³SùØ&#x5;±X×&#x88;&#x85;âé¾FlJÃ¦&quot;¬&#x9e;é¿BöuOä5µ]CÒµ&#x94;\SÀ5u[S®egâ¬©É&#x9a;R¬&#xb;Â«×Ë¬¦ºê\T5µTSBµ&#x94;SíT&apos;5åQK&#x15;e§&#x1a;¨)}&#x9a;&#x8a;&apos;º/k:&#x16;1-í&#x92;&#x9e;)&#x95;ÎäHS&#x85;´ÄGv*5&#x9a;
#&gt;Ó&#x13;M&#x19;ÑT&#xf;MÑÐÔ
Åmä&#x89;&#x1e;h©&#x80;l¨{&#x8e;t&gt;KÝsIÓsAÉsY¿³T;K«3&#x15;:Gº&#x9c;©ÆY&#x1a;&#x9c;¥¼Yz&#x9b;¥²&#x99;Ú&#x9a;#EÍE&#x1d;&#x8d;&#x9d;(e.«b&#x8e;´0&#x97;t/çj&#x97;{Ê&#x96;&#xb;z&#x96;¥bYÚ&#x95;K&#x8a;&#x95;©S9R§,MÊR¢,ýÉR&#x9d;,­ÉR&#x98;tíÅ=åÈÐ&#x8b;ÜÓ&#x86;&#xc;EÈÒ&#x81;LÍÇ¿¬ï8Ru,-ÇRp,ÝÆPk&#x90;´Iéù;ÑmLµÆÔh&#x1c;)3Îô&#x18;&#x17;µ&#x17;Ç:&#x8b;¥®X&#x9a;&#x8a;KJ&#x8a;¥&#x9f;Xª&#x89;¥&#x95;X
&#x89;¥&#x8b;8RC\Ð@,åÃÒ;,&#x95;ÃÒ6,EÃÒ1,õÂ&#x91;fa)&#x15;&#x96;&gt;aª&#x12;&#x96;&#x16;áH&#x81;0u&#x7;Gj&#x83;¥1&#x98;Ê&#x82;#=ÁT&#x11;,íÀR&#xc;,&#x9d;ÀR&#x7;,MÀ&#x91;&#x12;à&#x82;×ÿÈ×?=üË¯¿¼ùÓ&#x87;&#x7f;Ñs¿üõG^úé&#x9b;_&#x1e;ù#?üô¾/&#x9f;{»à_?òª/_úô /¿ùò&#x96;/&#x1f;ùò&#x8c;w&#x7f;ø}/øò}/&#x8f;÷ôsOïö±O{z²uz­&#x97;¯zy¨&#x97;_ú&#x8d;Þè#&#x1f;ô%Ïóò7Ó&#x5;ßòò(O?ò&#x91;÷xù&#x8c;&#x97;§xù&#x87;§Wxù&#x82;&#x97;&#x7;øØï;½½G&gt;ÞéÙ]þÜåÅ]¾Ûå±]~Úå&#x9d;]&gt;Ùé&#x89;&#x1d;þWô}ùÜÿº¼®Ë×º&lt;¬Ë¯zäM]&gt;Ôé9]þÒå%]¾Ñå&#x11;=ò&#x83;&#x9e;û&lt;&#x8f;&lt;&#x9d;Ó¿¹¼&#x9a;Ç¾ÌéÁ\~Ëå­¼ä£l&#x17;ü&#x91;Ë&#xb;¹|&#x8f;Ëã8ý&#x8c;Ë»xäS\&#x9e;Äå?\^Ãå \&#x1e;Âî&#x17;|&#x8d;&#xf;pyþ&#x96;¿oyù¦oïØ£&apos;ÿÔ{&#x17;^&#x9f;q&#x81;Fqaµÿ¥&#x8e;&#x93;(å:þ&#x99;	ÿá&#xe;&#x9f;ýôUU&#x9f;òó_1è&#x11;ôæ&#x88;FÒþý&#x11;þ5b÷&quot;Üi[.ßü­b* &#x94;&#x12;&#x1e;6V&#x7f;3&#x1c;_ù&#x9d;Þ;^¾MU0ÜøìªðÞ?¬qä5&#x8d;&#x7f;©ãb&#x1d;g7 %&#x1d;{{¢RüV?BÂÍ¿&#xd;	ý·o&#x8b;e#ÿÖ´&#x1a;¡&#x8b;Ì&#x88;&#x4;5&#x9e;ûý&#x13;oDV¸Z&#x84;~ñè¡e&lt;øÿ72B-&#x11;ú&#x12;&#x88;&#x10;x´sL°ýþþ&#x8d;è&#x1e;6&lt;&#x9c;»
ök
&#x15;ÿ¶Û4¾Kã_Ø&#x18;fÒÃápøg&#x17;ã&#xf;Á^7&#x80;i/ÄÃa;ù÷N&#xe;ÿ&#x3;èÕ`&#xe;ÜE&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x88;ô&#x9c;ý&#x0;Ö¨&#x17;&#x4;8~&#xb;G" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x88;ô&#x9c;ý&#x0;Ö¨&#x17;&#x4;8~&#xb;G</stringProp>
                  <stringProp name="Argument.value">Ð&#x8c;0Ã&#x8c;·&#x8a;&#x1e;&#x8f;¥&#x8a;÷&#x1b;¡Y&#x86;
^.2&#x98;E&#x88;P#dÈßLù[µdhÞ~&#x14;&#x89;~¢H´&#xf;¥U¯&#xf;½¤&#xc;£&#x1d;h%úëÝòç&#x4;&#x14;¿	¨ÿfã&#x8;kô&#x8b;@£^&#x2;&#x8d;z	©yyÄ&#x2;&#x92;aô&#x8b;*&#x92;d&#x18;õRk&#x1a;å4-Q&#x8e;&#x16;©&#x19;jä×ì&#x1f;iö&#x8f;&#xb;Äxr&#x81;&#x18;&#x1f;.&#x84;&#x19;OÑ~.­§kÔ&#x7f;&#x87;½¸¤½&#x98;8Æ&#x8d;©Eû&#x98;&#x9a;z&#x7f;&#x99;kØ&#x85;¹&#x86;]X¨@&#x86;&#x90;a &#x9a;!F9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="«&#x17;&#x96;[¾­&#x5;¿¾&#x11;¼éj²_Xá´UÙö8Çüzws÷Í&#x8f;WþçáÝ·ß&gt;{úüö(kÉ¬9&#x7f;id:&#xc;«áÙÌîâA&#x1e;Â@([9Ü32]&#x1c;§Ó&#x19;VFc&#x95;dà~_]Ç&#x99;jÎmï/îÃ¶¯ñCòAË@#È¿¾W&#x1d;¶}&#xb;&#x19;ÝÞ2/ô Ó&#x83;E&#x80;&#x94;A&gt;ó}ÔóÕ&#xc;0&#x2;ÊÚ°W&#x97;I$&#x7f;5&#xf;ú&quot;zx&lt;&#x91;Èâº&#x84;&#x1b;¸¸±&#x16;&#x95;ú&#x84;ðÉm»¡Û¯¿¹ÞÝ&#x9b;&#x8f;oXjgK)·&#x9c;×/¨mZñh·ò9ë]Èþd&#x7;2Êß&#x8a;a]&#x98;&#x6;MÛ¥y&#x0;3È&lt;Ã&#x82;i&#x1e;ß&#x98;½Ð42f&#x92;n%ì&#x83;&#x92;Ï8 îCÄY&#x19;g)&#x9c;#ÚxX&gt;F13h" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">«&#x17;&#x96;[¾­&#x5;¿¾&#x11;¼éj²_Xá´UÙö8Çüzws÷Í&#x8f;WþçáÝ·ß&gt;{úüö(kÉ¬9&#x7f;id:&#xc;«áÙÌîâA&#x1e;Â@([9Ü32]&#x1c;§Ó&#x19;VFc&#x95;dà~_]Ç&#x99;jÎmï/îÃ¶¯ñCòAË@#È¿¾W&#x1d;¶}&#xb;&#x19;ÝÞ2/ô Ó&#x83;E&#x80;&#x94;A&gt;ó}ÔóÕ&#xc;0&#x2;ÊÚ°W&#x97;I$&#x7f;5&#xf;ú&quot;zx&lt;&#x91;Èâº&#x84;&#x1b;¸¸±&#x16;&#x95;ú&#x84;ðÉm»¡Û¯¿¹ÞÝ&#x9b;&#x8f;oXjgK)·&#x9c;×/¨mZñh·ò9ë]Èþd&#x7;2Êß&#x8a;a]&#x98;&#x6;MÛ¥y&#x0;3È&lt;Ã&#x82;i&#x1e;ß&#x98;½Ð42f&#x92;n%ì&#x83;&#x92;Ï8 îCÄY&#x19;g)&#x9c;#ÚxX&gt;F13h</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Ñ.¶^&#x9f;eÿÙ²ÿ&#x95;Dz&#x18;ý¨l&#x5;3&#x4;/§&#x8a;Ä&lt;¨&quot;5ÒIÎ&#x87;*&#x1a;ó½6&#x12;ÉP#&#x9f;JÕ&#xc;&#x9b;×_&#xd;&#x5;3l&#x1e;/&#x5;*d(-B´üM%&#x7f;3q&#x86;Ñ&#x7f;&#xf;ûï&#x96;¿&#x1b;çï&#x16;ó_*·&#x9a;a&#x96;£¥ô&#x10;¢&lt;¥&#x98;ï¢i&#x7f;±Öz&#x18;é&#x1b;Ô°G&#x83;&#x1a;öhbaçæ {«M¡µ&#x1e;ª§SÄ°¯&quot;&#x86;}&#x15;&#x5;2&gt;×&#x97;r&#x89;u®\ÂîZ«@&#x86;±îUH3ä,¿aÆ7´ü&#x9d;ëX&#x1b;E½æ-Ï0Ê³f(&#x19;²ÛÕ´&#x86;ÝL F:³°³&#x99;&#x19;o@­  m¾ª&#x4;&#x8c;&#x13;°àÆF¦&#x8d;a&#x80;ml&#x8c;ÀÌ&#x1d;*&#x6;&#x90;&#x19;940&#x19;Ð&lt;&#x17;&#x1b;Hk&#x1d;´&#x6;¨fbS &#x9e;¦&#x82;VÅ&#xe;V66AªQ© aå&#xe;âi&#x84;©ªv0&#x9;`&#x80;ÚÁ{áV h&#x1d;Ð&#x1f;)bÖ&#x15;`&#x1;&#x4;&#x85;;&#x80;&#x97;¬D&#x95;&#x7;To&#x86;2Z«&#x1d;ÔK¶ÂDÖ&#x81;½&#xa;Cn,&#x1d;¢©æ&#x83;M&#x9;&#x18;&#x95;&#x1a;&#x13;&#x80;uÀÈÕÀ&#x88;:DO}&#x8;%c¬&#x9a;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Ñ.¶^&#x9f;eÿÙ²ÿ&#x95;Dz&#x18;ý¨l&#x5;3&#x4;/§&#x8a;Ä&lt;¨&quot;5ÒIÎ&#x87;*&#x1a;ó½6&#x12;ÉP#&#x9f;JÕ&#xc;&#x9b;×_&#xd;&#x5;3l&#x1e;/&#x5;*d(-B´üM%&#x7f;3q&#x86;Ñ&#x7f;&#xf;ûï&#x96;¿&#x1b;çï&#x16;ó_*·&#x9a;a&#x96;£¥ô&#x10;¢&lt;¥&#x98;ï¢i&#x7f;±Öz&#x18;é&#x1b;Ô°G&#x83;&#x1a;öhbaçæ {«M¡µ&#x1e;ª§SÄ°¯&quot;&#x86;}&#x15;&#x5;2&gt;×&#x97;r&#x89;u®\ÂîZ«@&#x86;±îUH3ä,¿aÆ7´ü&#x9d;ëX&#x1b;E½æ-Ï0Ê³f(&#x19;²ÛÕ´&#x86;ÝL F:³°³&#x99;&#x19;o@­  m¾ª&#x4;&#x8c;&#x13;°àÆF¦&#x8d;a&#x80;ml&#x8c;ÀÌ&#x1d;*&#x6;&#x90;&#x19;940&#x19;Ð&lt;&#x17;&#x1b;Hk&#x1d;´&#x6;¨fbS &#x9e;¦&#x82;VÅ&#xe;V66AªQ© aå&#xe;âi&#x84;©ªv0	`&#x80;ÚÁ{áV h&#x1d;Ð&#x1f;)bÖ&#x15;`&#x1;&#x4;&#x85;;&#x80;&#x97;¬D&#x95;&#x7;To&#x86;2Z«&#x1d;ÔK¶ÂDÖ&#x81;½
Cn,&#x1d;¢©æ&#x83;M	&#x18;&#x95;&#x1a;&#x13;&#x80;uÀÈÕÀ&#x88;:DO}&#x8;%c¬&#x9a;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="¨Ï&#x9e;&#x82;&quot;àÃ&#x18;àó½`#ö&#x9;&#x16;à;RAkeBä&quot;ªâ&#x8b;&apos;Àgs!5&#x8c;ì&#x1;&#x9e;&#x9d;IUk&#x80;&#x81;¯&#x94;&#x4;&#x7f;ä©|í&#x6;D9&#x15;&#x8;|&#x95;&#x95;J*&lt;À÷½RÙjTáà3ÑÁ&apos;@&#x87;(Ç;A&#x1d;(&#x1e;&#x9;úL&#x8;°&#x12; ­&#x14;ìà;q©" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">¨Ï&#x9e;&#x82;&quot;àÃ&#x18;àó½`#ö	&#x16;à;RAkeBä&quot;ªâ&#x8b;&apos;Àgs!5&#x8c;ì&#x1;&#x9e;&#x9d;IUk&#x80;&#x81;¯&#x94;&#x4;&#x7f;ä©|í&#x6;D9&#x15;&#x8;|&#x95;&#x95;J*&lt;À÷½RÙjTáà3ÑÁ&apos;@&#x87;(Ç;A&#x1d;(&#x1e;	úL&#x8;°&#x12; ­&#x14;ìà;q©</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ìK´HAô½&apos;Á¶VÌÏ?ÒAykPHj£&#xe;&#xa;&#x1;JP;`&lt;&#x12;`U&#x87;fÚ&#x6;¨8hõm²&#x83;m&#xd;&#x0;&#x88;p&#x0;5&#x7;ôwi&#x7;ó\À&#x95;y@&#xd;P i&#x1d;&#x9a;×&#x8e;&#x8d;1²;°ÇP¡&#x12;íq ¯&#x94;°VïN@t&#x87;bÿê&#x90;1¾&#x16;©&#x3;vP±&#xe;Í«à&quot;J&#x3;¢.Fcl&#x1d;(b* c&#x87;Z&#x1c;&#x9a;&#x82;v¨Ñw&#x7;ð\&gt;&#x1a;\&#x6;xß &#x96;&#x1a;¹&#x2;&quot;&#x86;&#xa;D{&#x1c;¢;&#x95;@Ù:Ô(&#x87;Ñ,Á&#x13;&#x5;°¿Ç&#x12;&#x10;&#x3;*Wê Q&#x8e;¿j½Íµ&#x91;µ2 *m&#x15;&#x84;:4¯K&#x8a;&#x92;&#x94;&#x1;&#x9e;F&#x80;[4ÃA¼&#x1c;AiD&#x1d;&#x18;:&#x8;whØ!&#x6;WP´ôG&#x1a;6t ^&#x8e;Z&#x19; &#x9;F0À:&#x8c;*,&#x9b;&#x81;­ &#xc;&#x18;1uÄÔ&#x88;ñ&#x8d;&#x95;:ä£&#x8a;&#x92;åT-ÙA&#x87;¨´&#x9a;/¢&#x0;&#x8b;Ù R&#x10;&#x6;d&#x9b;Eý½&#x9b;&#x90;mnVË&#x84;(GÁ b&#x94;s&#x11;9Ä&quot;&#x12;5Ã2À&#x13;ûA5¦&#x96;C&#x8c;W&#x83;R&quot;M@¤ñý&#x10;;DS&#x15;&#x81;£v?ý&#x14;&#x9;¨µP&#x87;h³&#x92;Ï$&#x7;6¬µC&#x8c;²&#x9a;&#x96;Ò:Ä¢V3ò­ À&#x1c;L&#xa;Ç4&#xe;Ð&#x0;ÀXÝ&#xe;Æ&#x9b;1ù6j&#x1;Í&#x8f;&#x3;&#x1d;&quot;&#x86;È§q&#x2;A&#x2;Uì êP&#x9;u&#x80;I&#x0;[&#x1d;Ð&quot;±&#x8a;©tÈ4V0K¶&#x82;äu±&#x1f;J½" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ìK´HAô½&apos;Á¶VÌÏ?ÒAykPHj£&#xe;
&#x1;JP;`&lt;&#x12;`U&#x87;fÚ&#x6;¨8hõm²&#x83;m&#xd;&#x0;&#x88;p&#x0;5&#x7;ôwi&#x7;ó\À&#x95;y@&#xd;P i&#x1d;&#x9a;×&#x8e;&#x8d;1²;°ÇP¡&#x12;íq ¯&#x94;°VïN@t&#x87;bÿê&#x90;1¾&#x16;©&#x3;vP±&#xe;Í«à&quot;J&#x3;¢.Fcl&#x1d;(b* c&#x87;Z&#x1c;&#x9a;&#x82;v¨Ñw&#x7;ð\&gt;&#x1a;\&#x6;xß &#x96;&#x1a;¹&#x2;&quot;&#x86;
D{&#x1c;¢;&#x95;@Ù:Ô(&#x87;Ñ,Á&#x13;&#x5;°¿Ç&#x12;&#x10;&#x3;*Wê Q&#x8e;¿j½Íµ&#x91;µ2 *m&#x15;&#x84;:4¯K&#x8a;&#x92;&#x94;&#x1;&#x9e;F&#x80;[4ÃA¼&#x1c;AiD&#x1d;&#x18;:&#x8;whØ!&#x6;WP´ôG&#x1a;6t ^&#x8e;Z&#x19; 	F0À:&#x8c;*,&#x9b;&#x81;­ &#xc;&#x18;1uÄÔ&#x88;ñ&#x8d;&#x95;:ä£&#x8a;&#x92;åT-ÙA&#x87;¨´&#x9a;/¢&#x0;&#x8b;Ù R&#x10;&#x6;d&#x9b;Eý½&#x9b;&#x90;mnVË&#x84;(GÁ b&#x94;s&#x11;9Ä&quot;&#x12;5Ã2À&#x13;ûA5¦&#x96;C&#x8c;W&#x83;R&quot;M@¤ñý&#x10;;DS&#x15;&#x81;£v?ý&#x14;	¨µP&#x87;h³&#x92;Ï$&#x7;6¬µC&#x8c;²&#x9a;&#x96;Ò:Ä¢V3ò­ À&#x1c;L
Ç4&#xe;Ð&#x0;ÀXÝ&#xe;Æ&#x9b;1ù6j&#x1;Í&#x8f;&#x3;&#x1d;&quot;&#x86;È§q&#x2;A&#x2;Uì êP	u&#x80;I&#x0;[&#x1d;Ð&quot;±&#x8a;©tÈ4V0K¶&#x82;äu±&#x1f;J½</stringProp>
                  <stringProp name="Argument.value">Lþ&#x9a;I R&#x13;X{&#x8c;ÛÇ&#x98;}×òGqÆ´&#xe;&#x91;ÆOy&#x2;&#x1d;ZÄhµj&#x1d;Äc&#x4;cò&apos;4
°ÖZ&#x87;(Y&#x18;&#xc;[&#x7;&#x8e;4&#x8c;P&#x6;&#x84;Å¤&#x16;&#x88;&#x16;J&#x5;ß&#x1c;&#x8c;E@&#x5;;´&#x12;À&#x9c;&#x95;
³RB&#x85;&#x1;&#x18;å(d&#x97;E&#x81;ò&#x91;JaìP5 ù&#x9c;7&#x16;C&#x6;í&#x80;nL?u!v &#x7f;Ô&#x88;j&#x14;Ø&#x88;$ZØ&#x18;%&#x8c;àÐ&quot;¦V&#x83;&#x1;1¸­ÅÇx&#x87;H¬ &#xd;:&#x84;y&#x15;¨Æ&#x98;:h&#x82;Ú&#x82;LcYN&#x80;$dß&#x3;¼&#x85;*\ u&#x88;ñR?~s&#x7; 	¾g</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="X³o" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">X³o</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ó[$&#x1c;&#x94;Ö5Å&lt;é&#x7;å¼7?&#x8;â éé¤÷ÜT¨ô¸&#x86;ù¶2m&#x94;oDSÅÜ×Ìï&#x1a;zy*&#x8a;&#x93;¼6*&#x0;y&#x6;&#x9;Â&#x8c;C °FR&gt;En&#x91;7(J¦BþÕ;(¾&#x3;&#x9c;´¶A1nTÔ/b&#x6;ÅÎ@ÅÜi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ó[$&#x1c;&#x94;Ö5Å&lt;é&#x7;å¼7?&#x8;â éé¤÷ÜT¨ô¸&#x86;ù¶2m&#x94;oDSÅÜ×Ìï&#x1a;zy*&#x8a;&#x93;¼6*&#x0;y&#x6;	Â&#x8c;C °FR&gt;En&#x91;7(J¦BþÕ;(¾&#x3;&#x9c;´¶A1nTÔ/b&#x6;ÅÎ@ÅÜi</stringProp>
                  <stringProp name="Argument.value">(f,&#x15;ócÍ &#x98;k&#x4; yB	&#x8a;&#x1d;&#x89;&#x0;Z~í&#x4;i&#x7f;ê^ÎNµçð&#x3;¨&#xe;&#x8a;ó&#x6;&#x1;SÃ:&#x88;³&lt;ñN&#xd;&#x8a;&#x91;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="E&#x7f;I&#x8a;¤&#x85;h&#x9c;åýB´Ä&#xa;&#xd;&#x8a;Q`_(ñ&#x6;&#xb;¢&#x8c;óûã&#x12;Ä~&#x16;&#x1c;&#x14;åù&#x15;\®î è%W&#x9;&#x95;A&apos;Ê&#x1c;b¥§ó­&#x10;:åZ&#xd;Â&#x11;ÇU&#x7;µlAã|§8A&#x9c;&quot;Ý&#x1d;_&#x8c;:A¼Wý.6ß&#x10;Añ­Ë&#x82;-o&#xd;&#x82;b÷vÊ}2(ÛçW«1ZA±gûål&#x89;1&#xa;ª&#x99;C&#x0;Ò~N&#x96;y¥Õ&#x98;»ìÞQ&#x96;A±¢Ø}BYoó;9&#x1d;&#x94;µµØF&#x7;e^¿*Mû9ÅÎÀM5×LPÌXVÿv±N-vy¿»´´n&#x90;&#xc;J»&#x4;E&#xb;,4!A~ë&#x9;&#x87;.¼ÙÃÖÿç&#xa;&apos;9lÇ&#x9a;°" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">E&#x7f;I&#x8a;¤&#x85;h&#x9c;åýB´Ä
&#xd;&#x8a;Q`_(ñ&#x6;&#xb;¢&#x8c;óûã&#x12;Ä~&#x16;&#x1c;&#x14;åù&#x15;\®î è%W	&#x95;A&apos;Ê&#x1c;b¥§ó­&#x10;:åZ&#xd;Â&#x11;ÇU&#x7;µlAã|§8A&#x9c;&quot;Ý&#x1d;_&#x8c;:A¼Wý.6ß&#x10;Añ­Ë&#x82;-o&#xd;&#x82;b÷vÊ}2(ÛçW«1ZA±gûål&#x89;1
ª&#x99;C&#x0;Ò~N&#x96;y¥Õ&#x98;»ìÞQ&#x96;A±¢Ø}BYoó;9&#x1d;&#x94;µµØF&#x7;e^¿*Mû9ÅÎÀM5×LPÌXVÿv±N-vy¿»´´n&#x90;&#xc;J»&#x4;E&#xb;,4!A~ë	&#x87;.¼ÙÃÖÿç
&apos;9lÇ&#x9a;°</stringProp>
                  <stringProp name="Argument.value">lm&lt;ÞJü¯kt&quot;À&#x8d;Þ &#x91;k#u&#x97;T&#x95;²a;&#x89;))&#x93;ÒÒð&#x97;&#x89;ò~Ñ&#x9f;s&#x91;ÑkÿÐ=%Ò/ª¥¼¡&#x1;]&#x19;Öâ&#x8a;ß»ü&#x9a;|&#x80;p&#x2;eÃ×4d¤ôQ*çià^Á&#x17;&#x12;\ï(&#x95;[WÆW&#x10;xûü &#x97;&#x90;&#x1d;6Îy&#x81;&#x1b;nÅão&#x9e;¾º{ùãÕ&#x8f;/^Þ&gt;¹ùñ¯··¯~|øíË»ç¯n&#x9f;ß|&#x85;&#x5;kiE¯
~õ¢\ï&quot;&#x8b;Ü°2ÛíC½©7&#xf;&#x19;¾æ&#x87;ªOÊÃ&#x8a;ê&#xe;&#x14;`þ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="±s&#x5;Å¨&quot;&quot;RÃA1×&#x10;&#x99;&#x99;mP/¯Ö&#x9a;ý&#x8;ÊtBµeº|¥w¢è&#x1b;6È" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">±s&#x5;Å¨&quot;&quot;RÃA1×&#x10;&#x99;&#x99;mP/¯Ö&#x9a;ý&#x8;ÊtBµeº|¥w¢è&#x1b;6È</stringProp>
                  <stringProp name="Argument.value">6H3o«&#x0;uPZ&#x17;µä*&#xb;j&#x92;ä&#x17;&#x18;&#x83;Ò&#x92;&#x4;&#x0;±&gt;&#x82;b} û&#xb;²¥N±&#x1f;$Í8Í8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ä·SI&#x1a;;&#x12;&#x16;*&#x15;qP&#x8c;4&#x16;b­:(Æ&#x17;&#xb;5&#x7f;ûtB&#xb;bT¥AÖã&#x18;z^f&#x10;&#x9;jÅ¬LÊ§&#x8d;s&apos;&#xc;&#x82;lK«2&#x9e;ú&#x95;r&#x90;&#x12;±&#xc;ª&#x19;g&#x6;±&#xb; ø&#xb;&quot;r&#x0;KÎµ &#x98;kèwuY&#x87;SX&#x12;¡&#x9a;ßÜvâ,E&#x80;Ò&#x1a;NÙK&#x10;&#x90;&#x9e;×w&#x9f;þ´u»8µh&#xb;Xm&#x96;OMsí&#x7;ÅN&#x8d;~¨d&#x18;&#x14;³Ó/&#x6;)fq&#x90;ôt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ä·SI&#x1a;;&#x12;&#x16;*&#x15;qP&#x8c;4&#x16;b­:(Æ&#x17;&#xb;5&#x7f;ûtB&#xb;bT¥AÖã&#x18;z^f&#x10;	jÅ¬LÊ§&#x8d;s&apos;&#xc;&#x82;lK«2&#x9e;ú&#x95;r&#x90;&#x12;±&#xc;ª&#x19;g&#x6;±&#xb; ø&#xb;&quot;r&#x0;KÎµ &#x98;kèwuY&#x87;SX&#x12;¡&#x9a;ßÜvâ,E&#x80;Ò&#x1a;NÙK&#x10;&#x90;&#x9e;×w&#x9f;þ´u»8µh&#xb;Xm&#x96;OMsí&#x7;ÅN&#x8d;~¨d&#x18;&#x14;³Ó/&#x6;)fq&#x90;ôt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH eb14148e1fa0191e752e5352a5924dca19b479a9 SAPISID1PHASH eb14148e1fa0191e752e5352a5924dca19b479a9 SAPISID3PHASH eb14148e1fa0191e752e5352a5924dca19b479a9</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/binary</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://waa-pa.clients6.google.com/$rpc/google.internal.waa.v1.Waa/Ping" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">$rpc/google.internal.waa.v1.Waa/Ping</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;BGzusj5ImLnUrCMhNtL0&quot;,&quot;!t7SltOzNAAbSWgvo8lpC0pohI9GEhJY7ADQBEArZ1J_mykS9p2tgnVVQyQEjMsMrv3OPkHDw8OAmZa9WZQhlUly3IT6qV0Z4Je2Qp3sJAgAABMtSAAAAB2gBB34AR_4_OKLDUacaxIvCDc7xqyX8J9-rOc0IGMDQKhszISrxrZNHP8pJbQpUpsEqdECBk3IQ6FCEzqD-Etwx8SnFukoCBb6VKUKVmQS2ArdECGazi8Yhd4bYmhTuyvKVNLuuCMXq7irHno6IDVvqpR-szaz7iMAFHJ2v4BtiF-V0hSx_K_6gtncRpKY3mcYXOJMF7i6ZbRxKNoj1WB2Hr1cxMQg2osgezm0RaGGeXiXSbtu5U2a2ZXQqjNJMnfEGeTuQCwrTa_NxX3JSn-jN-xWp_Dsykt-GVDqksQG9Xa96YLThrj2GB0hhqeZy2jXhfE95NjRYv4nqSjbijAKd-gNic8HMJIbSbXfi_IF_0l4oFr-quN0gUKzCvhwKSLHNo_g4Q_W2jKL0xJ-hY7Yzz7PN_1WiwBGUPGmVYf-64qprrYHweSULy-MChrMX6ES4wZVrLfNXStyUWdBlA4v-dTJnnQmqd-KHyomqZxrc_Fk36hy4rmCnYVVhTrYFQwPrWFvO43J-qccqq05EoFy1-kGVbmtedQ_7k6bKTSolCHW3T3eUrSAo_mwCjrIMYQ9LG9J3Fc6ggv_uwP23BCzfTG49JOYovEaxNU9BG_zA4vxzSStAChBi3LCyoCx_pskNiBJW-ow665rhNo86HLvqzfuxXb-YhIDxNsGfvqnCOXGxpUkvgaKjAuKZc9MX032Kzvi_WgmKR46V-XJ28sc8uSO5bg-s2cSxZ_kLzE8bjIP6UlXYp-OCnwHxSeh3FlqIRwX-rkQdF72ctOyyltnpcn2TyOi-SRReEouE3KMW8bXhQud6r0m0ZLV0IZGufCrS8q6_lAU20vDKFyix0ETz5382Mj0DQTzhkgYL8fYTrOrU_Qqo3jQFB0iBPxsR2oLJHfEd-CKRMSQonsQyMU1EB6yy_U0AJvMikr2kGSr6jgqUI_DNkc_qQ2-kwYDlIxT7buQUmBiSSBMO2ZtPyXq_bcrJ5_VtTnnjDDcZG2GTR0Iq8eDvXqQ8I8rUkL7CZyduBxQerwhHsHTaVf_Gk9yKdCcZZPpfZfjFFdVWSOfsHMI9wLwO39rw2zKwAoVlutwN_19p-pMkMOJav4tRWxAdhpn8DszsuZ7qH8_uI-L2cGDxPNRSnal66d1kqzrvKd4slgqRckku8s79G0ta5Pqc0hzFkBVt0M6Ch-WY19LQ349-yJw3DivuD2NGuecltjP5YzAphVehnL4Hpnv-QCaJqhe0jL1uAu0J174Abphy5oQb3HD4v7JPQr0-U6asQarcJbpnpQqQtq3J109mz5znDVhWRq5AXU0x3D3yyP5caZ3wjyljkSTCu1N4qf6O0ogYyGRB-2u1x22YsLpf6oL8464vH422lNCSSnrAOE6XF27xUZGJhSfL6hcGyDHvRpAGL2NzMFL3CELFLphlU2D6Wzp8GT7Q0SmhIHlCmZ0_v_UZ0aScvCyJHU2CyBuEpnXJ8HGvwU1KsFrxcEGH64haKaXeUlHzhh60n4QiJxyVQZosonarNuQmmDc9FHy5erfWiNoYWCBddASrKp0Xq0-CScBtxA8lMV5jRI4wJlSSHvJBUfGAe4hCbHF6AYi_p4FOSi4xRpK4JjuxOW9ilfQADxtEauBuq-2HiTkFAFPyRi94yiSlgfK0xd9SOf9elqMLkkYpm0fJeAsEe5bzN0qyvsVe4Mzlwgs-RsnnAeMvXIgcq3xc&quot;,283,1180569970]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH 1752816715_b01beb021557b8e75a25c10682f5f7e8071d1217 SAPISID1PHASH 1752816715_b01beb021557b8e75a25c10682f5f7e8071d1217 SAPISID3PHASH 1752816715_b01beb021557b8e75a25c10682f5f7e8071d1217</stringProp>
                </elementProp>
                <elementProp name="X-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-User-Agent</stringProp>
                  <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBGb5fGAyC-pRcRU6MUHb__b_vKha71HRE</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json+protobuf</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://play.google.com/log?format=json&amp;hasfast=true&amp;authuser=0" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">log</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="hasfast" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasfast</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authuser" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">authuser</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xa;&#x8d;&#x95;É®&#x83;è&#x11;&#x85;_%ñ®%sõ3&#x18;&#x83;²b&#x9e;Á&#x80;ÁÀí &#x84;1ó&lt;&#xf;O&#x1f;uZYtw¢dS&#x8b;ï&#x9c;*ÕY&#x9d;ïoøÚ.uý&#x7f;&#x8f;ïÿ&#x4;/I&#xb;&#x9;ôå/Þïï&#x8b;ÞÍ¿Pÿ Ç¨ý\®&#x17;âòsý¾0ùØ5ÅÒ\®&#x17;&#x18;ý&#x1d;&#x9;]&#x97;ÕÉßþ¥$ÿæ?Wp½¼&#x8a;öÓmÓo&#xc;|&#x81;/p¹^v&#x2;¿\/¿»¾À×&#x1d;&#x1;Ø&#x17;&#xc;àß&#xe;aWðóósÅÀýúý}&#x81;ï7&#x84;&#x80;ñ;|&#x3;øí/ïý9Ä7B ×?¬&#x0;&#x0;®¿^þ&gt;ßíz6N&#x9d;¢Þö [;¢î&#x19;Ðw¹D&#xa;\.ûw&#x8a;5i&#x8e;&#x1a;&#x3;X&#xe;&#x9b;£²É&#x1e;&#x99;³ÖuÍÃäJmÒÆ&#x15;5&#x1e;&#x95;Èn&#x84;A5AD¾&#x2;3¯&#x9d;ú@¥&apos;&gt;¸ Àä&#x4;1{t&#x92;©&#x8c;¢hm¶)&#x8a;¢h$£i&#x14;£¬&#x10;&#xb;&#xd;Ee&#x9d;(&#x8e;vieØø¾&#xf;&#x87;GÈ$4&#x1a;1&#x90;&#x4;&#x8d;5&#x95;|:%{ÜÇ@&#x17;&#x1f;D/¿ÍÞé&apos;nøp&#xc;]¡&#x92;&#x89;ó&#xc;w&#xe;,ÄÍÛNØ-¿T&#x1d;C¿qWq&#x14;·1m&#x84;&#x1a;?&#x1c;#DgAøù&#x7;{ûMþ\&#x8e;UquuY&#x18;Í&#x1b;îÅ(¶&#x1d;.±î:ô&#x16;4&#x9d;Ñy/4&#x8a;&#x17;edÅè¹à!&#x17;äö&#x1e;*!&#x9e;Ímlõ&#x8a;&#x8f;6±ï&#x19;²Æß&#xb;&lt;x[»¢w%ü¢&#x11;q&#x84;ã]33¤&#x9b;²äl&#x80;&#x15;&#x9;Bâ&#x15;&#x9e;ý&#x9e;&#x97;&#x9b;&#x83;DHà&#x99;C©ËZ&#x9b;rBò\Lf&#x1b;&#x9f;Q¨ï&#x1e;*Û-TêÐþêCv:ª&#x19;&#x12;\v¨" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;
&#x8d;&#x95;É®&#x83;è&#x11;&#x85;_%ñ®%sõ3&#x18;&#x83;²b&#x9e;Á&#x80;ÁÀí &#x84;1ó&lt;&#xf;O&#x1f;uZYtw¢dS&#x8b;ï&#x9c;*ÕY&#x9d;ïoøÚ.uý&#x7f;&#x8f;ïÿ&#x4;/I&#xb;	ôå/Þïï&#x8b;ÞÍ¿Pÿ Ç¨ý\®&#x17;âòsý¾0ùØ5ÅÒ\®&#x17;&#x18;ý&#x1d;	]&#x97;ÕÉßþ¥$ÿæ?Wp½¼&#x8a;öÓmÓo&#xc;|&#x81;/p¹^v&#x2;¿\/¿»¾À×&#x1d;&#x1;Ø&#x17;&#xc;àß&#xe;aWðóósÅÀýúý}&#x81;ï7&#x84;&#x80;ñ;|&#x3;øí/ïý9Ä7B ×?¬&#x0;&#x0;®¿^þ&gt;ßíz6N&#x9d;¢Þö [;¢î&#x19;Ðw¹D
\.ûw&#x8a;5i&#x8e;&#x1a;&#x3;X&#xe;&#x9b;£²É&#x1e;&#x99;³ÖuÍÃäJmÒÆ&#x15;5&#x1e;&#x95;Èn&#x84;A5AD¾&#x2;3¯&#x9d;ú@¥&apos;&gt;¸ Àä&#x4;1{t&#x92;©&#x8c;¢hm¶)&#x8a;¢h$£i&#x14;£¬&#x10;&#xb;&#xd;Ee&#x9d;(&#x8e;vieØø¾&#xf;&#x87;GÈ$4&#x1a;1&#x90;&#x4;&#x8d;5&#x95;|:%{ÜÇ@&#x17;&#x1f;D/¿ÍÞé&apos;nøp&#xc;]¡&#x92;&#x89;ó&#xc;w&#xe;,ÄÍÛNØ-¿T&#x1d;C¿qWq&#x14;·1m&#x84;&#x1a;?&#x1c;#DgAøù&#x7;{ûMþ\&#x8e;UquuY&#x18;Í&#x1b;îÅ(¶&#x1d;.±î:ô&#x16;4&#x9d;Ñy/4&#x8a;&#x17;edÅè¹à!&#x17;äö&#x1e;*!&#x9e;Ímlõ&#x8a;&#x8f;6±ï&#x19;²Æß&#xb;&lt;x[»¢w%ü¢&#x11;q&#x84;ã]33¤&#x9b;²äl&#x80;&#x15;	Bâ&#x15;&#x9e;ý&#x9e;&#x97;&#x9b;&#x83;DHà&#x99;C©ËZ&#x9b;rBò\Lf&#x1b;&#x9f;Q¨ï&#x1e;*Û-TêÐþêCv:ª&#x19;&#x12;\v¨</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="8&gt;&#xb;½&#x9b;É¸åâ$&gt;#7&#xd;&#x85;&#x8a;&lt;&#x94;&#xf;&#x13;&#x7;Á£O&#x83;´äù&#x8f;û²&#x8d;t&#x12;5&#x89;ÜÔÍ@ÉqCNe£:·^æM&#xf;a²&#x87;z­Ò&#xc;9Z±ÙzíÔ&apos;ï[&#x82;&#x9d;Îi&#x9;î&#x83;H&#x84;&#x8b;&#x4;©H,°ûC·ì6ªqü&#x3;WÃ9®Ê&#x7;&#x9b;êl°âªZ&#x88;éN&#xa;`&#x8e;n&#x8f;!&#x6;ùÉW´;&#x3;&#xd;grèåÃ¤j¢&#x18;&#x9;&#x1d;ò&#x86;²Åº°&#x88;.,I\Ïåãæ&#x9f;T&#x9f;»IÞª&#x98;Ø· d2&#x91;&lt;ä&#x9;(Ux¡&#x16; Ãw&#x8c;z÷ùqëÌ7*²Øz&#x97;&#x1f;æ&#x8; &#x7;&#x8f;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">8&gt;&#xb;½&#x9b;É¸åâ$&gt;#7&#xd;&#x85;&#x8a;&lt;&#x94;&#xf;&#x13;&#x7;Á£O&#x83;´äù&#x8f;û²&#x8d;t&#x12;5&#x89;ÜÔÍ@ÉqCNe£:·^æM&#xf;a²&#x87;z­Ò&#xc;9Z±ÙzíÔ&apos;ï[&#x82;&#x9d;Îi	î&#x83;H&#x84;&#x8b;&#x4;©H,°ûC·ì6ªqü&#x3;WÃ9®Ê&#x7;&#x9b;êl°âªZ&#x88;éN
`&#x8e;n&#x8f;!&#x6;ùÉW´;&#x3;&#xd;grèåÃ¤j¢&#x18;	&#x1d;ò&#x86;²Åº°&#x88;.,I\Ïåãæ&#x9f;T&#x9f;»IÞª&#x98;Ø· d2&#x91;&lt;ä	(Ux¡&#x16; Ãw&#x8c;z÷ùqëÌ7*²Øz&#x97;&#x1f;æ&#x8; &#x7;&#x8f;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Koûí¥E(ñ!¨±&#x8e;&#x1f;¡aÑAæ(&apos;³æ&#x9b;b«¢Þ&#x85;&#x19;f&#x86;/¤TT°ËPîßýó¼?ô&#x10;~&#x15;&#x1b;-8&#xf;¡qý&#x14;Â±¡&#x1f;G_Ü&#x12;ÛQ&#xf;HcòQópÎÆ¶À&#x1d;ÕT÷ìùp^&#x1f;º¦°&#x15;ú&lt;å¶5&#x9b;á&#x3;)âÑ5C°&#x8f;qÈW(&#x9e;&#x1f;ØØ0­ïºùsôys{&#x8c;/~50T&#x86;&#x86;8&#x1e;&#x6;pã:þ&#x80;¡JpßÍ&#x9c;|Ìð^áoåiw5#¾Ð&apos;&#x9a;8£Mua³1å(i¾Iª&#x2;)£|&#x8c;gÙ&#x1a;.Û&#x3;AiæL&#x9f;&#x2;FÊ&#x86;ß­\´ë&#xe;I&#xb;áIaë~ÚöL19] *stÌ&#x1e;öS¥&#x17;´ü&#x82;º&#xd;Çoc®w&#x4;.ªëp¦Ëî½!?&#x97;Ø]&#x9f;&#x84;t&#x1d;ZÆð&#x84;½wª5&#x8b;&#x94;&#x92;Z&#x94; " elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Koûí¥E(ñ!¨±&#x8e;&#x1f;¡aÑAæ(&apos;³æ&#x9b;b«¢Þ&#x85;&#x19;f&#x86;/¤TT°ËPîßýó¼?ô&#x10;~&#x15;&#x1b;-8&#xf;¡qý&#x14;Â±¡&#x1f;G_Ü&#x12;ÛQ&#xf;HcòQópÎÆ¶À&#x1d;ÕT÷ìùp^&#x1f;º¦°&#x15;ú&lt;å¶5&#x9b;á&#x3;)âÑ5C°&#x8f;qÈW(&#x9e;&#x1f;ØØ0­ïºùsôys{&#x8c;/~50T&#x86;&#x86;8&#x1e;&#x6;pã:þ&#x80;¡JpßÍ&#x9c;|Ìð^áoåiw5#¾Ð&apos;&#x9a;8£Mua³1å(i¾Iª&#x2;)£|&#x8c;gÙ&#x1a;.Û&#x3;AiæL&#x9f;&#x2;FÊ&#x86;ß­\´ë&#xe;I&#xb;áIaë~ÚöL19] *stÌ&#x1e;öS¥&#x17;´ü&#x82;º&#xd;Çoc®w&#x4;.ªëp¦Ëî½!?&#x97;Ø]&#x9f;&#x84;t&#x1d;ZÆð&#x84;½wª5&#x8b;&#x94;&#x92;Z&#x94; </stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="5&#xf; &#x88;r®EøÊ&#x1a;ÅÂp&#x17;òd&#x84;&#x98;bb±&#x8d;Û;&#x83;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">5&#xf; &#x88;r®EøÊ&#x1a;ÅÂp&#x17;òd&#x84;&#x98;bb±&#x8d;Û;&#x83;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="!&#x11;£S©w" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">!&#x11;£S©w</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="3&#x1a;cùÝ·½9&#x98;ó&#x80;Ê0 &#x9b;óv¶¬&#x9b;¿¬áFy&#xe;ØQ&#x16;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3&#x1a;cùÝ·½9&#x98;ó&#x80;Ê0 &#x9b;óv¶¬&#x9b;¿¬áFy&#xe;ØQ&#x16;</stringProp>
                  <stringProp name="Argument.value">&#x8e;Ç-&#x8e;&#x2;t &#x8f;º¬ì&apos;³À:6¤¸&#x1;ºÌ?&#x4;&#x8b;&#x86;&#x90;&#x5;Þ&#x11;Ä&#x9f;Ô&gt;Å;&#x95;Àpl&#x15;1&#x4;©uÆ¶Û&#x91;28Üã&#x91;ûî&#x4;&#x82;&#x9c;Û©&#x8a;ç±p°âjõ&#x94; &quot;ú©ñ*Êp*¯öyí ,þ:{BxÞM`7¹$ÖL&#x13;&#x80;p&#xd;&#x9d;&#x0;Dv¼2&#x87;,:&#x8;sÐ&#xb;×·&#x9e;L&#x88;Âº9°2ñã&#x1e;s&#x82;&#x88;cy¤D^âÔâ&#x99;ç8h1³&#x90;÷Ã5&#x83;nêÚhÔ&#x17;³iØ&#x98;äÅã&#x96;&#x8c;é«Ð;ÿÅÐ&#x9f;&#xf;e&#x8f;J&#xf;¼&#x1;@&#x8c;&#x1d;ÓóN&#x11;µæÞJKÂ6¹¶mq&#x95;i&apos;&#x15;¨&#x4;Ë&#x99;·Èã&#x94;_&#x84;=Æ&#x1b;v&#x81;íV¯`r¹ìÆ&#x8b;,êÔ¤Ø}æ¢&#x85;^&#x6;&#x8;&#x11;&#x8b;gÅSüã°
&#x12;;
»ÎR&#x5;ì&#x1f;Ò6R2©&#x7;M­*¿o@*&apos;ÔÄ%·÷©&#x83;áX&apos;7Á´³Þ²	²¦¶¥&#x12;mõ¤,&#x1e;Ð=þõr&#x85;a&#x2;Üp&#x92;¼&#x83; üó¿&#x1a;&#x17;&#x82;I&#x2;&#x80;ÿ®ÃØÏÏõO%þóOTã&#x6;&#x93;²&#x8;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="S ½&#x88;Ä}õ&#x99;&#x8f;%&quot;Ð Ï&#x87;$8&#x90;ÒËS&#x8e;¼é¥å¯X;Øå»()å&#x3;ez&#x11;&#x13;¢" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">S ½&#x88;Ä}õ&#x99;&#x8f;%&quot;Ð Ï&#x87;$8&#x90;ÒËS&#x8e;¼é¥å¯X;Øå»()å&#x3;ez&#x11;&#x13;¢</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="$¶÷ ¬Ô&#x93;#Þ¥ôÀ&#x9d;Úó{È`ÚMÜí$Gùz&#x90;¬Í&#x83;ÆÊüðw$&#x9e;&#x8d;ã¨ç¶&#x8f;[äy&#x18;&#x5;d[VÂu&#xb;&#x87;*Ú&#x8b;x{¹¹|ð&#x11;4 P] &#x5;Â&#x92;2£M&#xc;xXS&#xe;&#x2;VVá&#x8f;b&#x7;Üó¼¡&#x4;¢&#x95;&#x80;5&#x9f;g^e¾J¤þs4F&apos;4&#x87;&#xe;-M&#x9e;&#x6;&#x5;ýØ&apos;&#xb;éTYL¹&#xf;Ä(&#x96;f&#x9b;];&#x99;&#x87;æÀ&#x1c;&#x8d;&#x1f;Gè&#x0;J^µ¢&#x1a;&#x91;J°G¼Ì&#x6;G&#xa;Y½&#x8a;ÃÁD jóÙZÚ&#x9f;÷÷b:&#xd;]Ø6­&#x19;H0?&#xe;o&#x8;ßñ(ßBw~¶mÉ²q  ÂÓ&#x2;Ò@$ìê&#xd;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$¶÷ ¬Ô&#x93;#Þ¥ôÀ&#x9d;Úó{È`ÚMÜí$Gùz&#x90;¬Í&#x83;ÆÊüðw$&#x9e;&#x8d;ã¨ç¶&#x8f;[äy&#x18;&#x5;d[VÂu&#xb;&#x87;*Ú&#x8b;x{¹¹|ð&#x11;4 P] &#x5;Â&#x92;2£M&#xc;xXS&#xe;&#x2;VVá&#x8f;b&#x7;Üó¼¡&#x4;¢&#x95;&#x80;5&#x9f;g^e¾J¤þs4F&apos;4&#x87;&#xe;-M&#x9e;&#x6;&#x5;ýØ&apos;&#xb;éTYL¹&#xf;Ä(&#x96;f&#x9b;];&#x99;&#x87;æÀ&#x1c;&#x8d;&#x1f;Gè&#x0;J^µ¢&#x1a;&#x91;J°G¼Ì&#x6;G
Y½&#x8a;ÃÁD jóÙZÚ&#x9f;÷÷b:&#xd;]Ø6­&#x19;H0?&#xe;o&#x8;ßñ(ßBw~¶mÉ²q  ÂÓ&#x2;Ò@$ìê&#xd;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH eb14148e1fa0191e752e5352a5924dca19b479a9 SAPISID1PHASH eb14148e1fa0191e752e5352a5924dca19b479a9 SAPISID3PHASH eb14148e1fa0191e752e5352a5924dca19b479a9</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/binary</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Notification/Getnotitfication" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Notification/Getnotitfication</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/CustomerNVendorItems" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/CustomerNVendorItems</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ItemCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemCode</stringProp>
                  <stringProp name="Argument.value">RMPOW001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GinTypeCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinTypeCode</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ItemsTobeInwardTpe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemsTobeInwardTpe</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VendorId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">VendorId</stringProp>
                  <stringProp name="Argument.value">156</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PoId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PoId</stringProp>
                  <stringProp name="Argument.value">PO/IP/2526/200054</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/CustomerNVendorItemsDetails" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/CustomerNVendorItemsDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ItemCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemCode</stringProp>
                  <stringProp name="Argument.value">RMPOW001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GinTypeCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinTypeCode</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ItemsTobeInwardTpe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemsTobeInwardTpe</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VendorId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">VendorId</stringProp>
                  <stringProp name="Argument.value">156</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">PO/IP/2526/200054</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetInvoicedata" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetInvoicedata</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="InvoiceNo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">InvoiceNo</stringProp>
                  <stringProp name="Argument.value">SDA123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CustVendorId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">CustVendorId</stringProp>
                  <stringProp name="Argument.value">156</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="subTransactionCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">subTransactionCode</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GoodsInwardNotes" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GoodsInwardNotes</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;GINId&quot;:&quot;&quot;,&quot;GINDate&quot;:&quot;18/07/2025&quot;,&quot;GateEntryNo&quot;:&quot;SDA234&quot;,&quot;GateEntryDate&quot;:&quot;18/07/2025&quot;,&quot;Remark&quot;:&quot;GIN INTERPLANT TRANSFERGIN INTERPLANT TRANSFERGIN INTERPLANT TRANSFERGIN INTERPLANT TRANSFER&quot;,&quot;InvoiceDate&quot;:&quot;16/07/2025&quot;,&quot;ApprovedBy&quot;:&quot;&quot;,&quot;GinStatus&quot;:&quot;Draft&quot;,&quot;RemarkFromApprover&quot;:&quot;&quot;,&quot;EWayBill&quot;:&quot;SDSDD&quot;,&quot;InvoiceNo&quot;:&quot;SDA123&quot;,&quot;PoSoRevision&quot;:&quot;1&quot;,&quot;CustVendorId&quot;:&quot;156&quot;,&quot;CustomerVendor&quot;:&quot;V&quot;,&quot;subTransactionCode&quot;:&quot;17&quot;,&quot;StoreCode&quot;:&quot;RM&quot;,&quot;PoSoId&quot;:&quot;PO/IP/2526/200054&quot;,&quot;action&quot;:&quot;GoodsInwardNotes&quot;,&quot;lstgoodinwardnote&quot;:[{&quot;GINDetailId&quot;:&quot;0&quot;,&quot;ItemCode&quot;:&quot;RMPOW001&quot;,&quot;ItemName&quot;:&quot;COPPER (cu)&quot;,&quot;qty&quot;:&quot;1.00&quot;,&quot;AcceptedQty&quot;:&quot;&quot;,&quot;RejectedQty&quot;:&quot;&quot;,&quot;ChallanQty&quot;:&quot;1&quot;,&quot;BalanceChallanQty&quot;:&quot;&quot;,&quot;ReceivedQty&quot;:&quot;1&quot;,&quot;LotNumber&quot;:&quot;SD123&quot;,&quot;UnitPrice&quot;:&quot;567.45&quot;,&quot;ProcessCode&quot;:&quot;&quot;,&quot;UomId&quot;:&quot;2&quot;,&quot;Discount&quot;:&quot;0&quot;,&quot;HsnNo&quot;:&quot;74061000&quot;,&quot;taxPerSGST&quot;:&quot;0&quot;,&quot;taxAmtSGST&quot;:&quot;0&quot;,&quot;taxPerCGST&quot;:&quot;0&quot;,&quot;taxAmtCGST&quot;:&quot;0&quot;,&quot;taxPerIGST&quot;:&quot;0&quot;,&quot;taxAmtIGST&quot;:&quot;0&quot;,&quot;taxPerUGST&quot;:&quot;0&quot;,&quot;taxAmtUGST&quot;:&quot;0&quot;,&quot;DeliveryChallanId&quot;:&quot;&quot;,&quot;compDefectiveQty&quot;:&quot;0.00&quot;,&quot;DefectiveQty&quot;:&quot;&quot;,&quot;SecondaryUomId&quot;:&quot;0&quot;,&quot;isselected&quot;:&quot;true&quot;,&quot;LineTotalWithTax&quot;:&quot;567.45&quot;,&quot;SubTotal&quot;:&quot;567.45&quot;,&quot;PartWeight&quot;:&quot;0.00&quot;,&quot;TotalWeight&quot;:0,&quot;PackagesId&quot;:&quot;&quot;,&quot;NoofBoxes&quot;:&quot;&quot;,&quot;PoItemDetailsId&quot;:&quot;-9223372036854419282&quot;,&quot;InvoiceCode&quot;:&quot;&quot;,&quot;ReworkRejQty&quot;:&quot;&quot;,&quot;ReworkRemark&quot;:&quot;&quot;,&quot;ScrapRejQty&quot;:&quot;&quot;,&quot;ScrapRemark&quot;:&quot;&quot;,&quot;DefectiveRemark&quot;:&quot;&quot;,&quot;CostCenterCode&quot;:&quot;C17&quot;,&quot;ProductGroupCode&quot;:&quot;Auto2WEV&quot;}],&quot;lstInvoice&quot;:[{&quot;GINId&quot;:&quot;&quot;,&quot;InvoiceNo&quot;:&quot;SDA123&quot;,&quot;InvoiceDate&quot;:&quot;16/07/2025&quot;}],&quot;_actionName&quot;:&quot;GoodsInwardNotes&quot;,&quot;PlantId&quot;:&quot;2&quot;,&quot;PackingForwording&quot;:&quot;0.00&quot;,&quot;FrieghtCharges&quot;:&quot;0.00&quot;,&quot;TotalWithTax&quot;:&quot;567.45&quot;,&quot;TotalTax&quot;:&quot;0.00&quot;,&quot;ItemSubTotal&quot;:&quot;567.45&quot;,&quot;BillOfladingNo&quot;:&quot;&quot;,&quot;BillOfladingDate&quot;:&quot;&quot;,&quot;ContainerNumber&quot;:&quot;&quot;,&quot;VesselName&quot;:&quot;&quot;,&quot;BillOfEntryNo&quot;:&quot;&quot;,&quot;BillOfEntryDate&quot;:&quot;&quot;,&quot;CustomsDutiesApplicable&quot;:&quot;&quot;,&quot;CustomsExchangeRate&quot;:&quot;&quot;,&quot;ImportlicenceNo&quot;:&quot;&quot;,&quot;IsQualityCheck&quot;:1,&quot;SupplierInvoiceNo&quot;:&quot;&quot;,&quot;SupplierInvoiceDate&quot;:&quot;&quot;,&quot;EWayBillDate&quot;:&quot;10/07/2025&quot;,&quot;LorryReceiptNo&quot;:&quot;&quot;,&quot;LorryReceiptDate&quot;:&quot;&quot;,&quot;ManagementUnitCode&quot;:&quot;M02&quot;,&quot;ProjectCode&quot;:&quot;RMshed&quot;,&quot;CurrencyRate&quot;:&quot;0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/SendMailToSalePerson" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/SendMailToSalePerson</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lstInvoice[0][InvoiceNo]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lstInvoice[0][InvoiceNo]</stringProp>
                  <stringProp name="Argument.value">SDA123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CustName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">CustName</stringProp>
                  <stringProp name="Argument.value">V156-Speciality Sintered Products Private Limited - Chakan</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lstInvoice[0][InvoiceDate]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lstInvoice[0][InvoiceDate]</stringProp>
                  <stringProp name="Argument.value">16/07/2025</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ListItem" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ListItem</stringProp>
                  <stringProp name="Argument.value">[]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GINDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GINDate</stringProp>
                  <stringProp name="Argument.value">18/07/2025</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GinId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinId</stringProp>
                  <stringProp name="Argument.value">GIN26200058</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GinDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinDate</stringProp>
                  <stringProp name="Argument.value">18/07/2025</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lstInvoice[0][GINId]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lstInvoice[0][GINId]</stringProp>
                  <stringProp name="Argument.value">GIN26200058</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetGinApprovers?TypeId=17&amp;PlantId=2&amp;GinId=GIN26200058" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetGinApprovers</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="TypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">TypeId</stringProp>
                  <stringProp name="Argument.value">17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GinId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">GinId</stringProp>
                  <stringProp name="Argument.value">GIN26200058</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/SentforQualityCheck" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/SentforQualityCheck</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;lstGinApprovers&quot;:[{&quot;GinId&quot;:&quot;GIN26200058&quot;,&quot;EmpId&quot;:&quot;572&quot;,&quot;EmpName&quot;:&quot;SUDARSHAN CHANDRAKANT PALVE&quot;,&quot;EmpEmail&quot;:&quot;vasant@noeticsystems.co.in&quot;,&quot;VendOrCustName&quot;:&quot;V156-Speciality Sintered Products Private Limited - Chakan&quot;,&quot;Status&quot;:&quot;First Time PO&quot;,&quot;Plant&quot;:&quot;Plant-2&quot;,&quot;Date&quot;:&quot;18/07/2025&quot;,&quot;VendorOrCust&quot;:&quot;V&quot;,&quot;Rev&quot;:&quot;1&quot;}],&quot;lstItemCodeItemName&quot;:[{&quot;ItemCode&quot;:&quot;RMPOW001&quot;,&quot;ItemName&quot;:&quot;COPPER (cu)&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/ListGoodsInwardNotes" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/ListGoodsInwardNotes</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">91446.0</stringProp>
              <stringProp name="ConstantTimer.delay">45723</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 91446 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Home/GetPlant" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Home/GetPlant</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="UserName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">UserName</stringProp>
                  <stringProp name="Argument.value">sujit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Master/GetPageAccessDetails" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Master/GetPageAccessDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MenuId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">MenuId</stringProp>
                  <stringProp name="Argument.value">26</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetPlant" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetPlant</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetGinDetailsByDate" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetGinDetailsByDate</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Status</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ManagementUnitCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ManagementUnitCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="FromDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">FromDate</stringProp>
                  <stringProp name="Argument.value">2025-07-17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ProjectCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ProjectCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ToDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ToDate</stringProp>
                  <stringProp name="Argument.value">2025-07-18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GinId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Notification/Getnotitfication" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Notification/Getnotitfication</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
