<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="GIN FINISH GOODS" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.${project.version}. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">192.168.2.5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">espresso-pa.clients6.google.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">play.google.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <collectionProp name="DNSCacheManager.hosts"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/ListGoodsInwardNotes" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/ListGoodsInwardNotes</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Home/GetPlant" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Home/GetPlant</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="UserName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">UserName</stringProp>
                  <stringProp name="Argument.value">sujit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Master/GetPageAccessDetails" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Master/GetPageAccessDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MenuId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">MenuId</stringProp>
                  <stringProp name="Argument.value">26</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetPlant" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetPlant</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GoodsInwardNotes" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GoodsInwardNotes</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">5517.0</stringProp>
              <stringProp name="ConstantTimer.delay">2758.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 5517 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Home/GetPlant" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Home/GetPlant</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="UserName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">UserName</stringProp>
                  <stringProp name="Argument.value">sujit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Master/GetPageAccessDetails" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Master/GetPageAccessDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MenuId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">MenuId</stringProp>
                  <stringProp name="Argument.value">26</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetApplicationPreferencesSetting" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetApplicationPreferencesSetting</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetGRNTypeList" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetGRNTypeList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ItemsTobeInwardTpe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemsTobeInwardTpe</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetRackForRMGIN" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetRackForRMGIN</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/FillCustomerNVendorDropdownListByGin" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/FillCustomerNVendorDropdownListByGin</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="subTransactionCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">subTransactionCode</stringProp>
                  <stringProp name="Argument.value">18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VendorsNCustomer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">VendorsNCustomer</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Notification/Getnotitfication" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Notification/Getnotitfication</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/FillCustomerNVendorPoNSoDropdownList" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/FillCustomerNVendorPoNSoDropdownList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="GinTypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinTypeId</stringProp>
                  <stringProp name="Argument.value">18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">472</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PoSoType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PoSoType</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetPoSoDeatils" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetPoSoDeatils</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ItemsTobeInwardTpe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemsTobeInwardTpe</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PoId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PoId</stringProp>
                  <stringProp name="Argument.value">PO/FG/2526/200046</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetStorePlantGrnTypeWise" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetStorePlantGrnTypeWise</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Grntype" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Grntype</stringProp>
                  <stringProp name="Argument.value">18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://espresso-pa.clients6.google.com/v1/prewarm?key=AIzaSyAkthrhpXoRv6M12CMqGivGO-rCfsy2AxU&amp;alt=protojson" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">v1/prewarm?key=AIzaSyAkthrhpXoRv6M12CMqGivGO-rCfsy2AxU&amp;alt=protojson</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[[null,null,&quot;en-GB&quot;,null,7,[&quot;GRN Load Test-Type Based&quot;],&quot;9&quot;,null,&quot;19T5t_YyXrp-uKa7VIxINZPLNDrjA4uSa5Mqov1mEa8E&quot;,&quot;CJGJxYLZu44DFYj7SgAd7gc0ZQ&quot;,null,null,1]]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH 1752488499_5198e03a8e18898e92bb9614767d7d7abd75894d SAPISID1PHASH 1752488499_5198e03a8e18898e92bb9614767d7d7abd75894d SAPISID3PHASH 1752488499_5198e03a8e18898e92bb9614767d7d7abd75894d</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Encode-Response-If-Executable" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Encode-Response-If-Executable</stringProp>
                  <stringProp name="Header.value">base64</stringProp>
                </elementProp>
                <elementProp name="X-ClientDetails" elementType="Header">
                  <stringProp name="Header.name">X-ClientDetails</stringProp>
                  <stringProp name="Header.value">appVersion=5.0%20(Windows%20NT%2010.0%3B%20Win64%3B%20x64)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F138.0.0.0%20Safari%2F537.36&amp;platform=Win32&amp;userAgent=Mozilla%2F5.0%20(Windows%20NT%2010.0%3B%20Win64%3B%20x64)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F138.0.0.0%20Safari%2F537.36</stringProp>
                </elementProp>
                <elementProp name="X-JavaScript-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-JavaScript-User-Agent</stringProp>
                  <stringProp name="Header.value">google-api-javascript-client/1.1.0</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json+protobuf</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://play.google.com/log?format=json&amp;hasfast=true&amp;authuser=0" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">log</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="hasfast" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasfast</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authuser" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">authuser</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="\j&#x94;P¸úra$RU C &#x1;D&#x99;©&#x10;)" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">\j&#x94;P¸úra$RU C &#x1;D&#x99;©&#x10;)</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ËøA&#x9b;³y&#x9c;$_Òª¶÷ß¢ñ õp&#x11;6ÿ Cðg_&#x94;Ê&#x86;þ&#x81;g-\×4!&#xa;h¼÷Ë&#x1f;r×ZÄ3&#x9f;&#x1f;áZø[-MFyFÝ÷û»×&#x8e;n~½:½&#x8f;ß¯¡&#x2;æÿ &#x9a;rPûï7&#x8c;æÐ««««ïº}¾_c&#x4;½õ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ËøA&#x9b;³y&#x9c;$_Òª¶÷ß¢ñ õp&#x11;6ÿ Cðg_&#x94;Ê&#x86;þ&#x81;g-\×4!
h¼÷Ë&#x1f;r×ZÄ3&#x9f;&#x1f;áZø[-MFyFÝ÷û»×&#x8e;n~½:½&#x8f;ß¯¡&#x2;æÿ &#x9a;rPûï7&#x8c;æÐ««««ïº}¾_c&#x4;½õ</stringProp>
                  <stringProp name="Argument.value">°_Ì&#x1f;ýüÏÕ&#x7f;&#x1;&#x3;Ãá­ëH&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="¨-È0&#x96;é&#x4;HBÖ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">¨-È0&#x96;é&#x4;HBÖ</stringProp>
                  <stringProp name="Argument.value">ÀK¨~ø¦&#xe;V&#x12;|ÍLàHGÕÏ»	1ZÔ&#x4;3&#x8c;	F&#xf;ªµ&#x1c;6VÈ?&#x12;&#x13;¢ ­ÆçLB4&#x94;U«&#x8;&#x1d;(^&#x11;Ö&#x18;&#x90;&gt;ê lÆ¥ú9©&#x83;&#x85;&#x8f;&#x88;o¾	&#x10;àû²t¨ä`PÕ:xËs11&#x1c;À&#x18;`þù&#x91;àC&#x8b;k&#x9c;8:X@­FÜ!bÕ
m&#x82;&#xf;l®Uý4ØÁ3õm&#x8c;&#x7;H&#x82;&#x89;x	 Vßn&#x12; b!÷&#x94;ýÀ&#x18;&gt;þÙ&#x19;&#x81;É¿@;`&#x14;CÀ?9&#x13;2&#x8c;&#x8;&#xb;uÈW
&#x98;é8D½¬&#x82;&#xf;&#x89;&#x80;¬&#x97;¡Vèàc&#x95;ýÛ7&#x8a;&#x1a;&#x1f;Á&#x9e;&#x17; i´O@¼BÑhL@±¨&#x5;`3à&#xe;Ñ&#x8;ÀhD&#x1d;ÄË&#x83;&#x95;2&#xb;&#x7;L&#x9f;ø&#x10;5ó0Þ&#x83;&#x1;(&#x1;-¦¹&#x81;&#x90;Ö&#x1;&#x88;&#x1;RH:094ò&#xf;ª&#xe;º&#x99;!*3w&#x90;&#xe;þñÛ!Â&#x10;ø&#x16;é&#x80;0&#x0;}ü&#x18;&#x8a;6o&#x96;&#x80;(&#x18;&#x95;R½ð&#x1;&#x98;&gt;&#x0;&gt;&#x7;&#x13;,AÆ ?p&#x9a;Qå&#x5;Q0ò]X:xû&#x18;ùWö&#x84;H&#x87;[Ì&#x8b;&#x0;¤&#x4;?$&apos;ø*á&#x8b;f,)&#x1;Ñ&#x8;&gt;o³&#x84;Ò(&#x8a;Á&#x8d;ý¾&apos;Á&#x97;SóTD·Z&#x8a;øý&#x1c;Oj&#x9b;&#xf;G&#x8b;û&#x90;Nâoý¼fª&#x83;L&#x82;Pj-&#x83;`øq©&#x83;jKR_Û:µL&#x8f;°ú­·&#x93;ÂðSÐL¯Å	2HKÏ­©&#x7f;&#x1;9©_h$&#x19;[&#x9d;$&#x9d;&#x14;ê¤ðãR&#x0;Ê$Mò&#xf;§A&#x14;¹ùðïá&#x9c;2&#x1c;&#x10;fù&#x9c;27&#x96;*&#x15;&#x6;õ&#x18;&#x2;¨2È¢¤Ü&#x98;Ñ&#x6;Qúù&#x94;&#x82;A&#x99;&#x87;Ô&#x86;Yz©&#x8d;²&#x96;â&apos;S&#x18;&#x94;m/1ø&#x83;°&quot;×I&#x96;&#x4;-ó&#x15;6&#x98;&#x84;%Sñk¨¨&#x87;hó&#x15;¸&#x93;&#x86;_ ìw@ABY&#x96;V&#x84;³¤~Ð¡6H°&#x13;/j&#x19;&#x17;&#x94;*&#xf;ÂôCÀìéÆä&#x1f;ÅA&#x8c;Ù&#x1a;AÖ&#x89;³Ï&#x83;¢¾þi&#x91;=Ø¤Iö¹&#x13;F&#x8b;·ÆÄ&lt;HÒOµöR©Ö^*¿&#x7f;ÈpF,mPöª&#x96;âÓ?ÉJä¦&#x80;&#x90;#Â)ÛY±&#x96;&#x1c;&#x9d;NÙBÊäóº&#x93;d*Ì&#x90;5râÈM¥&#x88;N²ÌW&#x9a;&#x7f;Evª&#x99;G#ÐI&#x96;1L0ÛÔ)ëk&gt;&#x14;tP¶¤U¿~&#x1c;&#x94;å3(þm&#x1f;&#x4;}&#xe;:e&#x1b;&#x18;&#x80;&#x7f;;&#xd;Ê¸¾&#x94;w?lÙ&#x1a;&#x86;è&#x1f;&#x91;I&#x92;%&#xd;Êô&#x90;$Ç&#x9a;a«½|ØzÛ&#x9b;ß)è ìK&#x13;à¬&#x9b;	ú&#x8d;T&#x92;Æ:&#x4;&#x5;&#xb;&#x3;&#xc;&#x8a;&#x9e;&#x86;&#x82;¤¬&#x83;¢&#x7f;¡`ó=§&#x13;X&#x10;&#x81;*&#xe;²îGµÇ%ª&quot;A­&#x98;&#x95;Iù¶Q®&#x7f;A5ËÒXÆ[¿F&#xe;RD&#x92;A&#x9c;~f5V&#x1;¨¾-D&#x8c;J&#x92;c-(Æ&#x1a;øý\æá&#x14;-	Õ&#x8f;y8H&#x86;&#x9f;ßàv¢LY*f&#xb;9eÍ«Tééù&#x8a;Ôß¶ÞVN-ÊW&#x8d;&#x9b;å[Ó\&#xf;&#x82;bõ&#x6;?LR&#x1d;&#x14;#Ö/&#x8;1Fv&#x90;ôp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Õ(&#x1;&#xa;ldhÚ¨&#xe;°&#x8d;&#x8c; &#x12;Q&#x7;&#x86;&#x0;4C&#x87;VM&#x6;4&#x8f;EV¥µ&#xe;Ê&#x1;ª&#x19;ØÔ&#x8a;&#x87;áª¬ÐÁÊF" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Õ(&#x1;
ldhÚ¨&#xe;°&#x8d;&#x8c; &#x12;Q&#x7;&#x86;&#x0;4C&#x87;VM&#x6;4&#x8f;EV¥µ&#xe;Ê&#x1;ª&#x19;ØÔ&#x8a;&#x87;áª¬ÐÁÊF</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Sj)a&#x97;&quot;&#x2;&#x86;;6ºãK¿ó÷&#x83;Z&#xd;6:¹§»óû3&#x7;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Sj)a&#x97;&quot;&#x2;&#x86;;6ºãK¿ó÷&#x83;Z&#xd;6:¹§»óû3&#x7;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q.²&#x9e;&#x9f;eýÉ²þ&#x8c;&quot;Ý&#x8d;z0Y&#x8c;k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Q.²&#x9e;&#x9f;eýÉ²þ&#x8c;&quot;Ý&#x8d;z0Y&#x8c;k</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="±æ&#x18;w&#x8a;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">±æ&#x18;w&#x8a;</stringProp>
                  <stringProp name="Argument.value">&#x19;üL&#x93;#»&#x81;ö&#x9d;Ä)ËÜ&#x4; NÊñ×&#x1a;õÖpÊÖh~þ¶A==m}¦4&#x1b;­¦&#x5;!G§&#x96;øÌpª~Ð&#x18;&#x94;ý«þ±&#x18;eV?¾à \U&#x94;-OÜA&#x98;éI ´(ÂYaËvvÊ¶²b¹ë&#x6;å¸7ä&#x1a;{²&#x13;äZ&#x12;&#x7;U&#x1a;&#x94;£Éü¦&#x8;&#x6;eë&#x9a;B&#x9e;ô&#x83;r&#x8c;&#x9b;&#x1f;&#x4;a&#x90;ôpÒkn*Xº_&#x83;Ü&#x99;L&#x1b;æ&#x8e;hª&#x90;ë&#x9a;ù&#xd;COOEa&#x92;ç&#x86;¥Ö&lt;&#x83;&#x4;AúAÅh&#x8d;¤|&#xb;hÑ&#x83;AÑÎX&#x80;Z¤&#x17;&#x14;¹aAÿþ&#x1d;&#x84;Ü)wÓ &#x96;)«_À&#xc;&#x8a;&#x95;&#x1;&#x8b;¹ñzP&#x8c;b,æG&#x9d;A1þ°VÉSKP¬HXkË/  íoÝÚÙ&#x89;{&#xc;?&#x94;ê 8&#x83;`%lÀ&#x83;(Ó&#x13;¯Ô è}ßÊ&#x90;xP¬èèfì&#x98;çA1N&#x11;&#x18;óK))ß¶¸¦î&#x14;#&#x1b;A¡d}&#x9d;(c(kì$AÙV &#x92;§&#x9b; &#x9e;¯Z&#x11;&#x9a;&#x14;)cñN&#x1f;&#x14;ë&#x1;bmyzM&#x8a;&#x9a;#ø&#x5;ò l!&#x84;&#x96;_;NyºADË&#x95;Õ©&#x95;|Kn«&#x98;&#x94;éI&#x91;¬9&#x8e;3º_f&#x96;&#x98;yAÑ&#x92;ä&#x13; v¡ L¿Ôp9&#x91;&#x9f;ñ&#x6;EzÄ&#x8c;9k&#x83;¢&#x96;Ä&#x12;&#x8a;&#x81;N&#x98;1ÄJ&#xf;çK\í&#x94;s0&#x8;&#x86;&#x1f;±&#xe;jY&#x82;F¹/8Õ8	ºi½&#x18;vª±7&#x92;@Ëú&#x6;Å
ì&#x94;k]P&#x96;Å¯@£g&#x82;bÝõKÔ&#x12;ý&#x11;&#x14;§&#x16;rÛL¦ÒTs·&#xf;b&#x1d;z§&#x10;@Åÿ.ì&#x11;&#x97;D&#x1d;
²6&#x18;¯C:5&#x84;péÀ&#x86;ß&quot;Ð&#x92;»&#x82;&#x96;&#x13;aVMÁXÙÜ&#x0;Ôà&#x7f;Võô}&#x83;â&#x1d;&#xd;Î&#xf;Ëåí¯¦ 
&#x8d;5ª|ðò°æ&#x15;ê&#x11;&#x94;è&#x81;³&#x89;N¥&#x90;÷ÍI&#x98;z§@e;iàË&#x1d;¦`éÂð¢&#x6;Þ¼xèÊ©«&#x8d;Æ¸À­¸ÿõ³¯o_½¾xýòÕÍ£ë×&#x7f;¾¹ùúõý§¯n_|}óâú!&#x14;àÒJ½(ðð¥&apos;T·ËÝ#P«×úä~¹Öv&#x9f;ÚS¸ÿøæéÍýk*7On&#x1e;ÓµÝpä&#x89;O&#x1e;·&apos;öø&#x9a;&#x19;êõõ&#x93;&#x14;Qýà&#xc;{%]a95l&#x97;»ëÛ&apos;¯/üÏýÛ§O&#x9f;?{qs&#x10;µ&lt;|Y¦þ
G¤©Â&#x82;&#x93;&#x91;MÝ&#x99;Bd&#x97;&#x10;&#x1e;&#x89;¶¾Ï&#x8;&#x9b;&#x2;Ä&#x6;&#x13;÷{vÅuê®·½oUWÛ&#x9e;ãAòEKGÃÉ¿&gt;Û¯¶}&#xb;õØÞ2níN&#x86;¯&#x16;&#xe;`:ùÎW&#x1d;&#x8f;Çé@8&#x98;¹AÏ.&#x83;H&gt;µ&#x3;&#x81;äý;c&#x17;â0&#x17;×Õ&#x97;;~Ô®o&#x1e;?~L&#x8f;o&#x1e;?&#x95;§O.wßÖ8øö6*}Éyû&#x84;Z2Î&#x83;ÕÊÇ¬W!ë&#x93;&#x15;H/ßÓ£uëlÐl»l&#x9e;
éd&#x9c;Ñ&#x82;Ù&lt;¾&#xd;x¢ÙÈ&#x90;Az Aï&#x94;|G&#x99;qï&quot;ÊÌ(S¡ìÑF£å£&#x17;3&#x82;f&#x10;Í &#x9a;ùY/_&#x16;¼ö&#x11;&#x11;[G¸Ý¿dè8bº[k¯P/&lt;ôðXº&#xb;½&#x8a;&#x14;&#x83;ý\Ûî¿Cn&#xb;c­F&#x12;&#x92;««Ó&#x95;EîtåÝn¡&#x83;Î&#x19;e&#x8f;¢ð&#x6;ÛåîÝ_~&#x16;&#xb;À{ï~x¹Û`³&#xd;NÓ?Ó÷s)&#x4;_||	&#x93;9µ}&#x15;ë[X¯1&#x9f;Äôrl{¼º&#x93;²_&#x10;&#x9d;,&#x9a;?Fßù¿ö§6.&#x16;ß&#x96;jçwÔ=¸&#x96;AQ(T¸&#xf;~ý&#x1f;ÞXg»¼ü&#x0;&#x11;ú&#x8f;&#xb;Y¾[&#xc;ÿ/ Ù·É½ÿ­Í½£Í}&#x8b;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x80;&#x1c;&#x99;&#xa;&#x18;0u&#x10;&#xf;#&#x84;¬ÚÁ$&#x80;jå&#xe;^&#xb;o&#x5;¬­&#x3;ø &#x5;È¼&#x2;,&#x0;k¡&#xe;ÕSVD¦&#x1;ìÅP&#x2;kÜA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x80;&#x1c;&#x99;
&#x18;0u&#x10;&#xf;#&#x84;¬ÚÁ$&#x80;jå&#xe;^&#xb;o&#x5;¬­&#x3;ø &#x5;È¼&#x2;,&#x0;k¡&#xe;ÕSVD¦&#x1;ìÅP&#x2;kÜA</stringProp>
                  <stringProp name="Argument.value">e &#x84;h&#x1d;È³0 FÒ!&#x8a;jÞù&#x98;&#x0;&#x91;©&#x11;Öj&#x1d; bµj&#x88;&#x1d;¢¦Þ&#x85;&#x92;&gt;Æ¦	ê£©&#x80;Hõn&#xc;ðñ_ !ù&#x80;&#xb;ð&#x15;ª&#x80;µ2!b!²ød
ðÑ]P&#xd;&quot;z&#x80;G&apos;Ô&#x18;@&#x85;ÐªÏ&#x9c;&#x4;&#x7f;å¡|.&#x7;D:\±ú¬ &#x8c;*4À×ÁÂd&#x1c;Y8øHtð&#x1;Ð!ÒñJ`&#x7;&#x8c;W&#x2;&gt;&#x12;&#x2;b})¬­&#x14;èà sa&#x13;ò)[¤&#x0;øZ&#x94;`[ Ö*4é ´µZP¸a&#x7;­&#x1;&#x8a;&#x95;;@¼&#x92;Jª&#xe;Í´&#xd;PqPöe³&#x83;m­Vð&#x9d;´&#x83;y&#x98;JL4&#x80;&#x3;´¢´&#xe;Íó&#x82;F&#x80;­&#x3;¹&#xf;&#x16;,&#x91;»&#x3;z&#x16;&#x8;Ì^ø&#x80;(&lt;ÆêÕ!}|æa&#x7;èà&#x13;?¡y&#x16;TDq@äE`&#x4;­&#x3;&#x86;&#xf;W èÀÅ¡iÕ&#xe;&#x1c;5u¨&#x1e;ËÛ&#x9e;Ê&#x0;¯;Cá&#x88;&#x15;&#x10;&gt;þ­&#x85;&#x1d;¢:&#x8c;UÉ:p¤C`&#x96;à&#x81;&#x2;Èw±&#x4;&#x80;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="¥ùëH¼0%&#xb;S¨p O8&#x11;%&#x9c;&#x15; &#x1c;&#x8a;&#xd;&#x96;Ä`&#x9;&#xb;&#x96;&#x9c;à&#x9c;&#x88;`I&#x7;&#x96;``É&#x4;&#x96;8`I&#x2;&#xe;&#x84;&#x0;gÌÿËè¿LýËÀ¿ÌúË&#x98;¿LøËp&#x7f;`®_Fúe&#x9a;&#x9f;&#x6;ùe&#x86;_Æ÷&#x3;&#x93;û2´Oóú2ª&#x1f;&#x98;Ò§&#x1;}&#x99;Í&#x97;±|&#x99;È&#x97;a|&#x99;Ã&#xf;&#x8c;àg&#xc;Þ&#x7;fîiÜ^" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">¥ùëH¼0%&#xb;S¨p O8&#x11;%&#x9c;&#x15; &#x1c;&#x8a;&#xd;&#x96;Ä`	&#xb;&#x96;&#x9c;à&#x9c;&#x88;`I&#x7;&#x96;``É&#x4;&#x96;8`I&#x2;&#xe;&#x84;&#x0;gÌÿËè¿LýËÀ¿ÌúË&#x98;¿LøËp&#x7f;`®_Fúe&#x9a;&#x9f;&#x6;ùe&#x86;_Æ÷&#x3;&#x93;û2´Oóú2ª&#x1f;&#x98;Ò§&#x1;}&#x99;Í&#x97;±|&#x99;È&#x97;a|&#x99;Ã&#xf;&#x8c;àg&#xc;Þ&#x7;fîiÜ^</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ãe(^æán&#x14;¾k&#xa;^&#x6;àeö&#x9d;ÆÞiâ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ãe(^æán&#x14;¾k
^&#x6;àeö&#x9d;ÆÞiâ</stringProp>
                  <stringProp name="Argument.value">4ìNs®NÓí2Ø.3í2Î~«IöÀ&#x10;{Îüº&#x8c;®xÆÀºÌªÓ&#x98;z`B]&#x86;Óe.]FÒi&#x1a;]&#x6;Ñe&#x6;=4~N&#x93;ç&#x81;¡s&#x9a;7&#x97;Qs&#x99;2&#x97;&#x1;s&#x99;-&#x97;±r&#x99;(&#x97;ar&#x99;#§&#x11;r&#x98;&#x1e;ÁWèSÓã28.3ã2.&#x1e;&#x98;&#x14;§!q&#x99;&#xf;&#x97;Ñp&#x99;
&#xf;&#xc;&#x84;ç&#x8c;&#x81;Ó&#x4;8&#xd;&#x7f;ËÜwhäÓS&#x83;Þ2ã&#x9d;3Þµ3&#x86;ºe&#x9e;[F¹e&#x8a;&#x9b;&#x6;¸ev;0¶-&#x13;Û2¬-sÚ9#Z&#x98;ÎÂä2n¯0&#x7f;Jà&#x87;Z-&quot;&#x95;Ëø5&#x16;&#x7f;pSÛ~&#x1a;&#x8a;&#x80;¨¬&#x7f;9&#x1f;&#x1e;èÿNå[&lt;&#x10;¨¶&#x7f;&#x81;&#x87;ù?ì:ðð&#x7f;H9&#x7f;­åô~r</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="whq§&#x6;who&#x87;æöXk;4¶C[ÛÝ©¥M&#xd;íÒÌv­ìÔÈvmìÔÄ&#xe;-ìÐÀvíë&#x89;æuh]&#x87;Æuh[»¦ujYñH»Z&#x8f;´ªC£:´©C&#x93;:´¨]&#x83;:µ§Cs:´¦CcjG&#x9a;R8Ò&#x90;¦vtiF&#x87;VthD&#x87;6thBÛ&#x91;&#x6;th?&#x87;æsh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">whq§&#x6;who&#x87;æöXk;4¶C[ÛÝ©¥M&#xd;íÒÌv­ìÔÈvmìÔÄ&#xe;-ìÐÀvíë&#x89;æuh]&#x87;Æuh[»¦ujYñH»Z&#x8f;´ªC£:´©C&#x93;:´¨]&#x83;:µ§Cs:´¦CcjG&#x9a;R8Ò&#x90;¦vtiF&#x87;VthD&#x87;6thBÛ&#x91;&#x6;th?&#x87;æsh</stringProp>
                  <stringProp name="Argument.value">&#x87;Æsh;&#x87;¦óDËy á´;&#x82;ÍCyæPe.1f×`&#x1e;(.§Ðrê &#x97;¬Ò&#x8e;E&#x94;S;9%&#x93;S)9&#x4;&#x92;K&#x17;9å&#x90;&apos;*È%~&#x9c;&#x9a;ÇS&#x85;ã&#x12;6ê±z1E&#x8b;&#x87;&#x12;Å¥L´#&#x1d;â&#x92;&#x1f;&#x86;êð&#x8e;ÆpJ&#xb;§¢ðTH¸ô&#x83;v¬&#x16;&#x9c;&quot;Á©&#xd;&#x9c;&#x92;À©&#x4;&#x9c;&#x2;À©û&#x9b;r¿v&quot;î&#x9b;&#x9a;¾!å;&#x10;îé±LoªóøD&#x8b;7%x©¼;ÔÙ-yÝPÕM1ÝÔÐ&#xd;éÜRÌ-¡ÜÔÇMY&#x9c;&#x9d;&#x88;àìXòvFé¦Çº¶)g³#ñÚ¡TMO&#x84;iz$C[ê³SÑÙÔ&#x9a;M&#x89;ÙR&#x96;é]&#x1d;Ù&#x81;jl&#x8a;ÅäD&#x1a;6&#x15;aS&#x8;v¢ÿ&#x9a;²¯3j¯)ò&#x9a;Ú®)é&#x9a;J®)à¢·Èµ&#xe;ÅYz,ÅZ
,&gt;&#x91;Y&#xd;uÕ&#x12;UµS	&#x95;&#x1d;&#xb;¦ÎÈ£º**T?wUQS&#xc;Å&apos;Ò§P&lt;ÝÑ7MYÓP3-&#x11;ÓÔ.MÉÒT*Ù&#x89;.iÊ&#x91;¦
é&#x8c;æèí
£),:Õ&#x13;M&#x19;ÑT&#xf;-ÑP;&#x96;&#x8;MeÐ&#x12;&#x4;Ù±ügª~¦Ø&#x7;ï*z&#xe;õ;K¶£&apos;&quot;&#x9d;&#x13;%Î&#x14;à,Ý&#x8d;&#x1d;«l¦¸&#x86;N¤4SA3&#x85;3S/3e2quw$&#x85;Y&#x2;&#x98;%{Yb&#x97;%q9&apos;l9#g9/bYÒ&#x95;%X&#x99;2&#x95;&#x3;qÊ&#x94;¤,!Ê&#x92;&#x9f;,ÑÉ&#x92;&#x9a;L&#x81;É&#x81;¬ä¬&#x98;Ä&#x8e;ä&quot;ç¥!&#x7;&#x82;&#x90;sâ&#x8f;SÉÇ&#x1d;yÇ&#x19;QÇ&#x92;r,&#x1;Ç9ÙÆ&#x14;k&#x1c;H4&#x96;0cÉ1&#x96;&#x8;cI/&#x96;à¢&#x1e;&#x89; îÊ&apos;&#x86;hâ&#x8e;@bÈ&quot;&#x96;&#x18;b
&#x1f;¾·Èá@Ú°&#x4;&#xd;KÆ°Ä&#xb;C²&#x80;Ò</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x8b;p,&#x82;Ýå&#x8;&apos;9&#x1e;X4Æ;7&#x14;IW½&#x9d;X&#x85;5Ýæù³&#x81;@ºÍý¥T®éJ&#xb;&#x17;,&#x9f;±ä3!¥&#x1b;õw·?·|n&#x94;Ï-Æ¿05N7ÓÑRº[#" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x8b;p,&#x82;Ýå&#x8;&apos;9&#x1e;X4Æ;7&#x14;IW½&#x9d;X&#x85;5Ýæù³&#x81;@ºÍý¥T®éJ&#xb;&#x17;,&#x9f;±ä3!¥&#x1b;õw·?·|n&#x94;Ï-Æ¿05N7ÓÑRº[#</stringProp>
                  <stringProp name="Argument.value">Å&#x18;ï¢Ùþb­u7Â·ÊQÏV9Ú£&#x89;E;7&#x9f;Ù&#x1b;7­­uW=&#x9c;&#x2;Dû*@´¯&#x82;ÔôÏù¥Tb&#x9e; &#x95;hwe&#x96;&#x9a;nÌ{&#x15;Ôt)Óo&#x90;þ&#xd;,&#x9f;s&#x1e;kÃÈ×Pc}0TõôÍk&#x92;n¤oÍ@Ò%ogS&#x8e;v4e&#x88;pfÑîff´Ul&#x5;&#x4;póY</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="p&#x1d;&#x0;&#x91;&#x8e;Ö¬²hÅ|¥R&#x8;:°&#x6;4&#x1f;óFb@U;&#x80;7¦&#x9f;Â&#x0;: ¿j&#x88;&#x1c;&#x9;6D&#x89;&#x12;6&#x2;&#x89;FpháÃlu@tnkàçÂ&#xe;&#x11;X«¶Ú!&#x9a;W rô©&#x83;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">p&#x1d;&#x0;&#x91;&#x8e;Ö¬²hÅ|¥R&#x8;:°&#x6;4&#x1f;óFb@U;&#x80;7¦&#x9f;Â&#x0;: ¿j&#x88;&#x1c;	6D&#x89;&#x12;6&#x2;&#x89;FpháÃlu@tnkàçÂ&#xe;&#x11;X«¶Ú!&#x9a;W rô©&#x83;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="±&#x9a;&#x5;EO&#x3;&#x0;`&#x83;A1þ&#x0;&#x88;&#x88;lPO&#x8f;&#x99;³&#x1e;A&#x19;NÐï&#x81;&#x83;bsï&#x84;Q7h5×Ý Í¸&#x8d;kåAÙâ %g^P&#x93;$¿Ê&#x18;&#x94;-&#x89;µÖ&#x98;3A1gÀí&#x6;YR§X#&#x92;¦&#x9f;¦&#x1f;!&#x95;2)SQõk&#x8a;AQz4ÓìÁ H&#x85;¼uaPöL&#x1c;&#xc;lP&#x8e;&#x12;&quot;kÙ~N1&#x7f;&#x81;¸hÖ&lt;&#x88;&#x93;&#x1a;[&#x99;&#x94;1¤öÙã&#x14;»&#x1f;&#x90;h®§AÙo$&#x96;3&gt;)âr%ËYá&#x14;³&#x16;¸6`&#x19;&#x94;5b4Î¾tj&#x91;2&#x13;ùÍS§X&#x9f;&#x81;ýË&#xe;&#x6;qIj&#x6;0(ç&#x7;S&#x1c;&#x93;&#x7;e*~¡2)û&#x88;ýR\&#x7;e&#x8d;X&#x88;&#xb;MÊ&#x18;M(Ç&#x81;&#x93;æ[m&#x92;3Å)Û&#x85;&#x8d;Y`PÓN¹&#x86;9µ&#x9c;&#x15;l&#x2;9&#x9a;ØZÅI9 $&#xe;)&#x83;b&#x8d;&#x5;)&#x86;&#x2;&#x93;òmm&#x94;íâ&#x94;#Û¿A³§&#x9d;²§ÅWå2)c&#x80;&#x96;\Í&#x9c;r5&#x13;ìûjRúQ&#x91;R&#x7;å&lt;&#x12;ª&#x94;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">±&#x9a;&#x5;EO&#x3;&#x0;`&#x83;A1þ&#x0;&#x88;&#x88;lPO&#x8f;&#x99;³&#x1e;A&#x19;NÐï&#x81;&#x83;bsï&#x84;Q7h5×Ý Í¸&#x8d;kåAÙâ %g^P&#x93;$¿Ê&#x18;&#x94;-&#x89;µÖ&#x98;3A1gÀí&#x6;YR§X#&#x92;¦&#x9f;¦&#x1f;!&#x95;2)SQõk&#x8a;AQz4ÓìÁ H&#x85;¼uaPöL&#x1c;&#xc;lP&#x8e;&#x12;&quot;kÙ~N1&#x7f;&#x81;¸hÖ&lt;&#x88;&#x93;&#x1a;[&#x99;&#x94;1¤öÙã&#x14;»&#x1f;&#x90;h®§AÙo$&#x96;3&gt;)âr%ËYá&#x14;³&#x16;¸6`&#x19;&#x94;5b4Î¾tj&#x91;2&#x13;ùÍS§X&#x9f;&#x81;ýË&#xe;&#x6;qIj&#x6;0(ç&#x7;S&#x1c;&#x93;&#x7;e*~¡2)û&#x88;ýR\&#x7;e&#x8d;X&#x88;&#xb;MÊ&#x18;M(Ç&#x81;&#x93;æ[m&#x92;3Å)Û&#x85;&#x8d;Y`PÓN¹&#x86;9µ&#x9c;&#x15;l&#x2;9&#x9a;ØZÅI9 $&#xe;)&#x83;b&#x8d;&#x5;)&#x86;&#x2;&#x93;òmm&#x94;íâ&#x94;#Û¿A³§&#x9d;²§ÅWå2)c&#x80;&#x96;\Í&#x9c;r5&#x13;ìûjRúQ&#x91;R&#x7;å&lt;&#x12;ª&#x94;</stringProp>
                  <stringProp name="Argument.value">&#x1d;&#x94;éåmç íd½&#x1e;®TÈÒ»&#x85;&#x8c;&#x7;i¦ÌÖr&#x8c;;åÜ÷&#x13;E&#x8e;!§\Ã¤&#x81;Éð³Öýp&#x94;@ g&#x9b;ú&#x90;Ìy&#x19;Ô:)×I&#x19;Î&#x8a;ä&#xc;&#x8;Ê&#x94;&#xd;ûúâ&#x94; °Û,sVø=Uì[Ð*¹½e&#x90;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xa;í&#x9c;Ù&#x8e;\Ç&#x91;&#x86;_&#x85;¨ &#x1b;8leÆ&#x96;&#x11;0æ&#x82;Zmm^dx«n&#x10;$»)Ó¢Ù4)&#x8e;e?ý &quot;r©®*jÃÌx&#x6;°&#x4;t~&apos;OîûÉøYû}Ý^¼yþü{ÿÙ&#x9f;óÜÝ¼¸ÿÑ»»&#x93;°ûýîóÛ¯&#x7f;úàgï¾zôâz·ítwµíwïýùÕí_&#x9f;½ùënÛUL¯&#x8f;no¿|~s/ÞÜ&#xc;ÿ«­l»ß?{q}û÷×îW.ÊEÙm»oTvÛ.C]&#x94;&#x8b;&#x6;&#x85;.j©&#x9e;&#x10;måêêjã¶í÷»Ú&#x18;H&#x95;KUå&#x93;Ò&#x1d;×a¿?¨[%­[&#x8f;Of&#x8c;XJ&#x19;¯ÀFý&#x8e;C\õ Ã-p&#x10;ÍS$­WÛÝ|à &#x1f;5ö&#x8;ûý&gt;&quot;&#x1a;àV¥&#x94;M¥xcì&#x1;FÊßQ&#x9b;òÃzõGþÙ_}ÿ Ð¾%p¹Ð&#x12;ÿÕjP&#xc;ìû&apos;|&#x90;Eý1±þÿü)Wo&#x19;{9j&#x8e;Æ&#x1e;&#x96;&#xa;kèAü¹ÚöÕ¦&#x1f;m&#x87;&#x13;&#x84;þ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;
í&#x9c;Ù&#x8e;\Ç&#x91;&#x86;_&#x85;¨ &#x1b;8leÆ&#x96;&#x11;0æ&#x82;Zmm^dx«n&#x10;$»)Ó¢Ù4)&#x8e;e?ý &quot;r©®*jÃÌx&#x6;°&#x4;t~&apos;OîûÉøYû}Ý^¼yþü{ÿÙ&#x9f;óÜÝ¼¸ÿÑ»»&#x93;°ûýîóÛ¯&#x7f;úàgï¾zôâz·ítwµíwïýùÕí_&#x9f;½ùënÛUL¯&#x8f;no¿|~s/ÞÜ&#xc;ÿ«­l»ß?{q}û÷×îW.ÊEÙm»oTvÛ.C]&#x94;&#x8b;&#x6;&#x85;.j©&#x9e;&#x10;måêêjã¶í÷»Ú&#x18;H&#x95;KUå&#x93;Ò&#x1d;×a¿?¨[%­[&#x8f;Of&#x8c;XJ&#x19;¯ÀFý&#x8e;C\õ Ã-p&#x10;ÍS$­WÛÝ|à &#x1f;5ö&#x8;ûý&gt;&quot;&#x1a;àV¥&#x94;M¥xcì&#x1;FÊßQ&#x9b;òÃzõGþÙ_}ÿ Ð¾%p¹Ð&#x12;ÿÕjP&#xc;ìû&apos;|&#x90;Eý1±þÿü)Wo&#x19;{9j&#x8e;Æ&#x1e;&#x96;
kèAü¹ÚöÕ¦&#x1f;m&#x87;&#x13;&#x84;þ</stringProp>
                  <stringProp name="Argument.value">ðþ»&#x7;ÞÙµòlÀ}õV&#x87;vü¢&#x8e;ö,&#x7;puå&#x11;¶º&#x91;ÄÃw&#x8e;&#x9a;·çûm/ÿ/ý9?ôç¸=^v«&#x90;Àá8&apos;%oµËÝ{&#x1f;&#x7f;ôñ7&#x7f;üôOo&#x88;Þÿð&#x8f;&#x7f;i_|ùàº}ù¤üé×&#x97;»&#x9c;&#xe;&#xd;*I)æ&#x1d;&#x92;&#x1e;(&#x8;EH¸m&#x97;»&#x7;ï&#x7f;øùý&apos;o&gt;±÷ì&#x9b;¿¼üûk&#x3;ûÃ&#x17;¯øÍo&gt;ýèá³&#x9f;_&#x7f;uC¿yÿ&#x97;å&#xf;&#x1f;?úêo&#x9f;~Ó&gt;ûÕã?&#x7f;ðá?&gt;øä½&#x87;&#x1f;ßþæÓ/&#x1f;ÜÖ&#x8f;&#x1e;~õÀþù»¿¿øçÏ/w£¼Q¶ØD/wÛåî³Û&#x7f;&gt;{þüÑ;|Qîý¤o&#x80;÷&gt;ÿí=ß&#x1;&#x7f;vï÷Ï^&#x8;ýìÞ7B?½÷àåËç7¿¿yüÉ³¯ßal&#x17;(÷~òÉÏ&#x7f;ûÙ§Û½çÏ¾º¹÷ÑÍ&#x93;¯n&#x7f;Ú÷Õwr¿,&#x17;åÞ&#x17;&#x8f;&#x9e;&gt;zõ¬G&#x89;&lt;«ý&#x96;¿~øÇ&#x7f;üáÕËûo&gt;yÔ~÷&#x8b;o~ñù&#x9f;~õéçï¿úË&#x3;zóÅ#þìo·ÿYÿúÁ#ý`&#x14;|_¼Í&#xf;§|Ýö{n¥&#x14;n&#x9b;»µ`¸&#x88;é2&#x9b;»¨&#x98;®¡ºK&#x2;5\Õ&#x8;Ç­E|V&#xb;&#x7f;)&#x12;á&#x5;Z	·©¸Û
E8?&#x2;&#x84;k&#x14;ñ&#x95;Z&#x84;W&#x96;&#x8;¯&#x9a;á&#xd;³\FÍ&#x9f;k&#x11;&#x3;w ³&#x87;« ÈáZ±t«§W±Zø#³çS	k&#x84;§¬&#x87;&#x8f;¯&#x8;&apos;&#x95;âY(ò©Í&#x10;ÒM&#x7f;cp&#x7f;(,^o¨ÍÒÕêé&#x2;U³p¡r¸Tó&#x99;0&#x9f;UKºæå&#x7;&#x91;¨&apos;&#x88;Dù@&#x1a;{~à)¥&#x1b;å&#x0; Q_¯&#x96;¿Ç&#x8a;ñ&#x8c;&#x15;û3&#x19;&#x85;ËQ/¬&#x1a;ùbÕÈ&#x17;&#x1;&#x9b;§&#x87;$UÒ&#x8d;z!&#x3;Jº&#x91;/¶¦&#x91;NÓ&#x12;éh&#x11;NW#¾fýP³~Tjô&apos;&#x95;&#x1a;ýC&#x5;!ý1ÊO¥õp&#xd;ûs´&#x17;&#x95;l/B&#x8a;~#lQ&gt;Â¦^_&quot;&#x8e;v!âh&#x17;&#x12;,5Ý&#x9a;n &#x9a;.D:</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Æ&#xe;&#x12;éøFëeæ&#x86;ÖÊ&#x80;È´q&#x15;ìÐ&lt;/)&#x8a;R&#x6;x&#x18;©Ô¢&#x18;&#xe;âé&#x8;HCì@µ&#x83;P&#x87;&#x6;&#x1d;¢s&#x5;DK&#x7f;¥Ñ&#x86;&#xe;ØÓQ &#x3;4Á°&#xe;°&#xe;#&#xb;£á#ÃGÒ§&#x95;&#x1e;ËO&#x83;&#x1d;xøpøøÂ&#x8a;&#x1d;ò&#x15;&#x83;dÊ¬%«ì&#x10;Å`óI&#x14;`1zE&#xa;Ô&#x1;Y&#xb;Qß&#x87;&#x13;²&#x16;Í?¡&#x7;D:Z­&#x86;&#x8f;RN&quot;&#x87;&#x98;D¢fP&#x6;x`?¸Æ`s&#x88;&#x1e;lµ&#x94;&#x8;&#x13;&#x10;a|" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Æ&#xe;&#x12;éøFëeæ&#x86;ÖÊ&#x80;È´q&#x15;ìÐ&lt;/)&#x8a;R&#x6;x&#x18;©Ô¢&#x18;&#xe;âé&#x8;HCì@µ&#x83;P&#x87;&#x6;&#x1d;¢s&#x5;DK&#x7f;¥Ñ&#x86;&#xe;ØÓQ &#x3;4Á°&#xe;°&#xe;#&#xb;£á#ÃGÒ§&#x95;&#x1e;ËO&#x83;&#x1d;xøpøøÂ&#x8a;&#x1d;ò&#x15;&#x83;dÊ¬%«ì&#x10;Å`óI&#x14;`1zE
Ô&#x1;Y&#xb;Qß&#x87;&#x13;²&#x16;Í?¡&#x7;D:Z­&#x86;&#x8f;RN&quot;&#x87;&#x98;D¢fP&#x6;x`?¸Æ`s&#x88;&#x1e;lµ&#x94;&#x8;&#x13;&#x10;a|</stringProp>
                  <stringProp name="Argument.value">&#x84;&#xe;QT&#x85;J&#x91;»&#x9f;&#x86;&#x8a;&#x4;0&#x17;ì&#x10;eVô±å@&#x6;Ì&#x1d;¢ßÕ´&#x94;Ö!</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="íeÈ&#x9e;æë³Fëeª&gt;0PO³ô2F&#x1f;&#x98; §áùÀÜ&lt;&#x8d;Ì&#x7;¦åeP&#x9e;fäe&lt;^" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">íeÈ&#x9e;æë³Fëeª&gt;0PO³ô2F&#x1f;&#x98; §áùÀÜ&lt;&#x8d;Ì&#x7;¦åeP&#x9e;fäe&lt;^</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="µ&#x9a;¡/&#x5;&#x1;æ`R(&#x6;v&#x80;&#x6;T&#x88;Ùí`´&#x19;¡/£&#x16;ÐüxÐ!|&#x10;}`&apos;`M@&#x86;&#xe;¢&#xe;&#x8c; &#x3;L&#x2;Èx@&#x8b;À*¦Ò!ÃX&#x81;LÙ&#xa; çE~Hõò&#x10;ú6&#x93;&#x80;&#x85;&#x13;H»&#x8f;·&#x8f;&#x11;ùªå¯âÌi&#x1d;&quot;&#x8c;&#x9f;ú¤vhá£ll&#x1d;Ä}&#x4;b:$4&#xc;°ÖZ&#x87;HY¨&#x1a;´&#xe;&#x14;a&#x8;j&#x19;&#x10;-" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">µ&#x9a;¡/&#x5;&#x1;æ`R(&#x6;v&#x80;&#x6;T&#x88;Ùí`´&#x19;¡/£&#x16;ÐüxÐ!|&#x10;}`&apos;`M@&#x86;&#xe;¢&#xe;&#x8c; &#x3;L&#x2;Èx@&#x8b;À*¦Ò!ÃX&#x81;LÙ
 çE~Hõò&#x10;ú6&#x93;&#x80;&#x85;&#x13;H»&#x8f;·&#x8f;&#x11;ùªå¯âÌi&#x1d;&quot;&#x8c;&#x9f;ú¤vhá£ll&#x1d;Ä}&#x4;b:$4&#xc;°ÖZ&#x87;HY¨&#x1a;´&#xe;&#x14;a&#x8;j&#x19;&#x10;-</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH b6503ae0aeefcc7029951294df07a13f8b8d3a2f SAPISID1PHASH b6503ae0aeefcc7029951294df07a13f8b8d3a2f SAPISID3PHASH b6503ae0aeefcc7029951294df07a13f8b8d3a2f</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/binary</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/CustomerNVendorItems" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/CustomerNVendorItems</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ItemCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemCode</stringProp>
                  <stringProp name="Argument.value">41442</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="GinTypeCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinTypeCode</stringProp>
                  <stringProp name="Argument.value">18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ItemsTobeInwardTpe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemsTobeInwardTpe</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="VendorId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">VendorId</stringProp>
                  <stringProp name="Argument.value">472</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="PoId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PoId</stringProp>
                  <stringProp name="Argument.value">PO/FG/2526/200046</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/CustomerNVendorItemsDetails" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/CustomerNVendorItemsDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ItemCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemCode</stringProp>
                  <stringProp name="Argument.value">41442</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GinTypeCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinTypeCode</stringProp>
                  <stringProp name="Argument.value">18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ItemsTobeInwardTpe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ItemsTobeInwardTpe</stringProp>
                  <stringProp name="Argument.value">V</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VendorId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">VendorId</stringProp>
                  <stringProp name="Argument.value">472</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Id</stringProp>
                  <stringProp name="Argument.value">PO/FG/2526/200046</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Notification/Getnotitfication" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Notification/Getnotitfication</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetInvoicedata" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetInvoicedata</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="InvoiceNo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">InvoiceNo</stringProp>
                  <stringProp name="Argument.value">SDF344</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CustVendorId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">CustVendorId</stringProp>
                  <stringProp name="Argument.value">472</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="subTransactionCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">subTransactionCode</stringProp>
                  <stringProp name="Argument.value">18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GoodsInwardNotes" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GoodsInwardNotes</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;GINId&quot;:&quot;&quot;,&quot;GINDate&quot;:&quot;14/07/2025&quot;,&quot;GateEntryNo&quot;:&quot;SDF345325&quot;,&quot;GateEntryDate&quot;:&quot;14/07/2025&quot;,&quot;Remark&quot;:&quot;GIN FINISH GOODS&quot;,&quot;InvoiceDate&quot;:&quot;14/07/2025&quot;,&quot;ApprovedBy&quot;:&quot;&quot;,&quot;GinStatus&quot;:&quot;Draft&quot;,&quot;RemarkFromApprover&quot;:&quot;&quot;,&quot;EWayBill&quot;:&quot;SD2324&quot;,&quot;InvoiceNo&quot;:&quot;SDF344&quot;,&quot;PoSoRevision&quot;:&quot;1&quot;,&quot;CustVendorId&quot;:&quot;472&quot;,&quot;CustomerVendor&quot;:&quot;V&quot;,&quot;subTransactionCode&quot;:&quot;18&quot;,&quot;StoreCode&quot;:&quot;DISPSTR&quot;,&quot;PoSoId&quot;:&quot;PO/FG/2526/200046&quot;,&quot;action&quot;:&quot;GoodsInwardNotes&quot;,&quot;lstgoodinwardnote&quot;:[{&quot;GINDetailId&quot;:&quot;0&quot;,&quot;ItemCode&quot;:&quot;41442&quot;,&quot;ItemName&quot;:&quot;CRANK PULLEY&quot;,&quot;qty&quot;:&quot;10.00&quot;,&quot;AcceptedQty&quot;:&quot;&quot;,&quot;RejectedQty&quot;:&quot;&quot;,&quot;ChallanQty&quot;:&quot;10&quot;,&quot;BalanceChallanQty&quot;:&quot;&quot;,&quot;ReceivedQty&quot;:&quot;10&quot;,&quot;LotNumber&quot;:&quot;SD3423&quot;,&quot;UnitPrice&quot;:&quot;100&quot;,&quot;ProcessCode&quot;:&quot;&quot;,&quot;UomId&quot;:&quot;1&quot;,&quot;Discount&quot;:&quot;0&quot;,&quot;HsnNo&quot;:&quot;197619&quot;,&quot;taxPerSGST&quot;:&quot;3&quot;,&quot;taxAmtSGST&quot;:&quot;30&quot;,&quot;taxPerCGST&quot;:&quot;3&quot;,&quot;taxAmtCGST&quot;:&quot;30&quot;,&quot;taxPerIGST&quot;:&quot;0&quot;,&quot;taxAmtIGST&quot;:&quot;0&quot;,&quot;taxPerUGST&quot;:&quot;0&quot;,&quot;taxAmtUGST&quot;:&quot;0&quot;,&quot;DeliveryChallanId&quot;:&quot;&quot;,&quot;compDefectiveQty&quot;:&quot;0.00&quot;,&quot;DefectiveQty&quot;:&quot;&quot;,&quot;SecondaryUomId&quot;:&quot;0&quot;,&quot;isselected&quot;:&quot;true&quot;,&quot;LineTotalWithTax&quot;:&quot;1060.00&quot;,&quot;SubTotal&quot;:&quot;1000.00&quot;,&quot;PartWeight&quot;:&quot;417.00&quot;,&quot;TotalWeight&quot;:4.17,&quot;PackagesId&quot;:&quot;&quot;,&quot;NoofBoxes&quot;:&quot;&quot;,&quot;PoItemDetailsId&quot;:&quot;-9223372036854419291&quot;,&quot;InvoiceCode&quot;:&quot;&quot;,&quot;ReworkRejQty&quot;:&quot;&quot;,&quot;ReworkRemark&quot;:&quot;&quot;,&quot;ScrapRejQty&quot;:&quot;&quot;,&quot;ScrapRemark&quot;:&quot;&quot;,&quot;DefectiveRemark&quot;:&quot;&quot;,&quot;CostCenterCode&quot;:&quot;C21&quot;,&quot;ProductGroupCode&quot;:&quot;Auto2WEV&quot;}],&quot;lstInvoice&quot;:[{&quot;GINId&quot;:&quot;&quot;,&quot;InvoiceNo&quot;:&quot;SDF344&quot;,&quot;InvoiceDate&quot;:&quot;14/07/2025&quot;}],&quot;_actionName&quot;:&quot;GoodsInwardNotes&quot;,&quot;PlantId&quot;:&quot;2&quot;,&quot;PackingForwording&quot;:&quot;0.00&quot;,&quot;FrieghtCharges&quot;:&quot;0.00&quot;,&quot;TotalWithTax&quot;:&quot;1060.00&quot;,&quot;TotalTax&quot;:&quot;60.00&quot;,&quot;ItemSubTotal&quot;:&quot;1000&quot;,&quot;BillOfladingNo&quot;:&quot;&quot;,&quot;BillOfladingDate&quot;:&quot;&quot;,&quot;ContainerNumber&quot;:&quot;&quot;,&quot;VesselName&quot;:&quot;&quot;,&quot;BillOfEntryNo&quot;:&quot;&quot;,&quot;BillOfEntryDate&quot;:&quot;&quot;,&quot;CustomsDutiesApplicable&quot;:&quot;&quot;,&quot;CustomsExchangeRate&quot;:&quot;&quot;,&quot;ImportlicenceNo&quot;:&quot;&quot;,&quot;IsQualityCheck&quot;:1,&quot;SupplierInvoiceNo&quot;:&quot;&quot;,&quot;SupplierInvoiceDate&quot;:&quot;&quot;,&quot;EWayBillDate&quot;:&quot;10/07/2025&quot;,&quot;LorryReceiptNo&quot;:&quot;&quot;,&quot;LorryReceiptDate&quot;:&quot;&quot;,&quot;ManagementUnitCode&quot;:&quot;M01&quot;,&quot;ProjectCode&quot;:&quot;&quot;,&quot;CurrencyRate&quot;:&quot;0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/SendMailToSalePerson" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/SendMailToSalePerson</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lstInvoice[0][InvoiceNo]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lstInvoice[0][InvoiceNo]</stringProp>
                  <stringProp name="Argument.value">SDF344</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CustName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">CustName</stringProp>
                  <stringProp name="Argument.value">V436-Egearz Private Limited</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lstInvoice[0][InvoiceDate]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lstInvoice[0][InvoiceDate]</stringProp>
                  <stringProp name="Argument.value">14/07/2025</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ListItem" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ListItem</stringProp>
                  <stringProp name="Argument.value">[]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GINDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GINDate</stringProp>
                  <stringProp name="Argument.value">14/07/2025</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GinId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinId</stringProp>
                  <stringProp name="Argument.value">GIN26200051</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GinDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinDate</stringProp>
                  <stringProp name="Argument.value">14/07/2025</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lstInvoice[0][GINId]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lstInvoice[0][GINId]</stringProp>
                  <stringProp name="Argument.value">GIN26200051</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetGinApprovers?TypeId=18&amp;PlantId=2&amp;GinId=GIN26200051" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetGinApprovers</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="TypeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">TypeId</stringProp>
                  <stringProp name="Argument.value">18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GinId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">GinId</stringProp>
                  <stringProp name="Argument.value">GIN26200051</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/SentforQualityCheck" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/SentforQualityCheck</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;lstGinApprovers&quot;:[{&quot;GinId&quot;:&quot;GIN26200051&quot;,&quot;EmpId&quot;:&quot;20818&quot;,&quot;EmpName&quot;:&quot;SUDHIR  MANGAL  KALYANI&quot;,&quot;EmpEmail&quot;:&quot;vasant@noeticsystems.co.in&quot;,&quot;VendOrCustName&quot;:&quot;V436-Egearz Private Limited&quot;,&quot;Status&quot;:&quot;First Time PO&quot;,&quot;Plant&quot;:&quot;Plant-2&quot;,&quot;Date&quot;:&quot;14/07/2025&quot;,&quot;VendorOrCust&quot;:&quot;V&quot;,&quot;Rev&quot;:&quot;1&quot;}],&quot;lstItemCodeItemName&quot;:[{&quot;ItemCode&quot;:&quot;41442&quot;,&quot;ItemName&quot;:&quot;CRANK PULLEY&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/ListGoodsInwardNotes" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/ListGoodsInwardNotes</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">92243.0</stringProp>
              <stringProp name="ConstantTimer.delay">46121.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 92243 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Home/GetPlant" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Home/GetPlant</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="UserName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">UserName</stringProp>
                  <stringProp name="Argument.value">sujit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Master/GetPageAccessDetails" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Master/GetPageAccessDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MenuId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">MenuId</stringProp>
                  <stringProp name="Argument.value">26</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetPlant" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetPlant</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Store/GetGinDetailsByDate" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Store/GetGinDetailsByDate</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Status</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ManagementUnitCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ManagementUnitCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="FromDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">FromDate</stringProp>
                  <stringProp name="Argument.value">2025-07-14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ProjectCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ProjectCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ToDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ToDate</stringProp>
                  <stringProp name="Argument.value">2025-07-14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GinId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GinId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PlantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">PlantId</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://192.168.2.5/ACCSSPLDRYRUN/Notification/Getnotitfication" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">ACCSSPLDRYRUN/Notification/Getnotitfication</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
